{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_95200 eat category='Traditional Mediterranean Dishes' within one week, starting from 2022-06-08?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_95200 eat category='Traditional Mediterranean Dishes' within one week, starting from 2022-06-08?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_44160 eat subcategory='Battered and Fried Foods' within one week, starting from 2022-05-22?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_44160 eat subcategory='Battered and Fried Foods' within one week, starting from 2022-05-22?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_22119 eat subcategory='Processed Dairy' within one week, starting from 2022-05-20?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_22119 eat subcategory='Processed Dairy' within one week, starting from 2022-05-20?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_10660 eat category='Dairy and Plant-Based Drinks' within one week, starting from 2022-06-10?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_10660 eat category='Dairy and Plant-Based Drinks' within one week, starting from 2022-06-10?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_76068 eat subcategory='Raw or Roasted Nuts' within one week, starting from 2022-05-17?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_76068 eat subcategory='Raw or Roasted Nuts' within one week, starting from 2022-05-17?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_94120 eat category='Dairy and Plant-Based Drinks' within one week, starting from 2022-06-07?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_94120 eat category='Dairy and Plant-Based Drinks' within one week, starting from 2022-06-07?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "10"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_99000 eat category='Snacks and Appetizers' within one week, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_99000 eat category='Snacks and Appetizers' within one week, starting from 2022-06-11?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_65060 eat cooking_style='Boiled or Steamed' within one week, starting from 2022-05-25?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_65060 eat cooking_style='Boiled or Steamed' within one week, starting from 2022-05-25?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "9"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_51606 eat subcategory='Other Meats' within one week, starting from 2022-05-23?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_51606 eat subcategory='Other Meats' within one week, starting from 2022-05-23?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "9"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_71665 eat category='Traditional Mediterranean Dishes' within one week, starting from 2022-06-06?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_71665 eat category='Traditional Mediterranean Dishes' within one week, starting from 2022-06-06?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_67757 eat subcategory='Eggs' within one week, starting from 2022-06-03?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_67757 eat subcategory='Eggs' within one week, starting from 2022-06-03?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_95200 eat subcategory='Fruits' within one week, starting from 2022-06-06?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_95200 eat subcategory='Fruits' within one week, starting from 2022-06-06?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_96181 eat subcategory='Other Cereals (Quinoa and Others)' within one week, starting from 2022-06-04?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_96181 eat subcategory='Other Cereals (Quinoa and Others)' within one week, starting from 2022-06-04?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_86472 eat category='Cereals and Legumes' within one week, starting from 2022-06-12?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_86472 eat category='Cereals and Legumes' within one week, starting from 2022-06-12?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "7"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_31649 eat subcategory='Poultry' within one week, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_31649 eat subcategory='Poultry' within one week, starting from 2022-06-09?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_96181 eat cooking_style='Preserved (Canned or Jarred)' within one week, starting from 2022-06-04?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_96181 eat cooking_style='Preserved (Canned or Jarred)' within one week, starting from 2022-06-04?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "7"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_74742 eat category='Oils and Fats' within one week, starting from 2022-06-06?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_74742 eat category='Oils and Fats' within one week, starting from 2022-06-06?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "7"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_70068 eat cooking_style='Boiled or Steamed' within one week, starting from 2022-05-20?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_70068 eat cooking_style='Boiled or Steamed' within one week, starting from 2022-05-20?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "12"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_10660 eat subcategory='Sliced Bread' within one week, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_10660 eat subcategory='Sliced Bread' within one week, starting from 2022-06-09?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "5"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_70068 eat cooking_style='Boiled or Steamed' within one week, starting from 2022-06-07?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_70068 eat cooking_style='Boiled or Steamed' within one week, starting from 2022-06-07?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "5"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_91516 eat subcategory='Bread' within one week, starting from 2022-05-21?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_91516 eat subcategory='Bread' within one week, starting from 2022-05-21?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "9"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_86472 eat subcategory='Fruits' within one week, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_86472 eat subcategory='Fruits' within one week, starting from 2022-06-09?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_40008 eat category='Traditional Mediterranean Dishes' within one week, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_40008 eat category='Traditional Mediterranean Dishes' within one week, starting from 2022-06-09?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "6"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_27766 eat subcategory='Soup' within one week, starting from 2022-06-07?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_27766 eat subcategory='Soup' within one week, starting from 2022-06-07?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_70954 eat category='Dairy and Plant-Based Drinks' within one week, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_70954 eat category='Dairy and Plant-Based Drinks' within one week, starting from 2022-06-11?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "7"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_13504 eat category='Fast Food' within one week, starting from 2022-05-25?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_13504 eat category='Fast Food' within one week, starting from 2022-05-25?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_91594 eat subcategory='Olive Oil' within one week, starting from 2022-06-04?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_91594 eat subcategory='Olive Oil' within one week, starting from 2022-06-04?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_28771 eat category='Vegetables and Fruits' within one week, starting from 2022-05-31?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_28771 eat category='Vegetables and Fruits' within one week, starting from 2022-05-31?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "13"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_99000 eat subcategory='Alcoholic Beverages' within one week, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_99000 eat subcategory='Alcoholic Beverages' within one week, starting from 2022-06-09?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many times did A4F_48857 eat cooking_style='Fresh' within one week, starting from 2022-06-13?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many times did A4F_48857 eat cooking_style='Fresh' within one week, starting from 2022-06-13?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "28"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Sauces and Condiments' for A4F_25413 within one week, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Sauces and Condiments' for A4F_25413 within one week, starting from 2022-06-09?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "6.25"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were cooking_style='Fermented' for A4F_82994 within one week, starting from 2022-06-12?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were cooking_style='Fermented' for A4F_82994 within one week, starting from 2022-06-12?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "10"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were category='Sweets and Pastries' for A4F_93973 within one week, starting from 2022-06-12?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were category='Sweets and Pastries' for A4F_93973 within one week, starting from 2022-06-12?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "7.69"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were category='Beverages' for A4F_67598 within one week, starting from 2022-05-22?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were category='Beverages' for A4F_67598 within one week, starting from 2022-05-22?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "28.57"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were category='Beverages' for A4F_28771 within one week, starting from 2022-06-01?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were category='Beverages' for A4F_28771 within one week, starting from 2022-06-01?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "16.67"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Gazpacho/Salmorejo' for A4F_99000 within one week, starting from 2022-06-12?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Gazpacho/Salmorejo' for A4F_99000 within one week, starting from 2022-06-12?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "16.67"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were cooking_style='Boiled or Steamed' for A4F_89897 within one week, starting from 2022-05-18?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were cooking_style='Boiled or Steamed' for A4F_89897 within one week, starting from 2022-05-18?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "14.44"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Whole Grains' for A4F_51606 within one week, starting from 2022-05-19?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Whole Grains' for A4F_51606 within one week, starting from 2022-05-19?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "1.61"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were category='Cereals and Legumes' for A4F_78358 within one week, starting from 2022-05-23?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were category='Cereals and Legumes' for A4F_78358 within one week, starting from 2022-05-23?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "19.78"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were category='Beverages' for A4F_22119 within one week, starting from 2022-05-19?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were category='Beverages' for A4F_22119 within one week, starting from 2022-05-19?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "75"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Fruits' for A4F_56296 within one week, starting from 2022-06-13?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Fruits' for A4F_56296 within one week, starting from 2022-06-13?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "6.45"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Vegetables and Greens' for A4F_56718 within one week, starting from 2022-05-17?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Vegetables and Greens' for A4F_56718 within one week, starting from 2022-05-17?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "53.85"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Paella' for A4F_91362 within one week, starting from 2022-05-23?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Paella' for A4F_91362 within one week, starting from 2022-05-23?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "2.86"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were category='Vegetables and Fruits' for A4F_84740 within one week, starting from 2022-05-17?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were category='Vegetables and Fruits' for A4F_84740 within one week, starting from 2022-05-17?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "53.33"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were category='Cereals and Legumes' for A4F_84740 within one week, starting from 2022-05-19?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were category='Cereals and Legumes' for A4F_84740 within one week, starting from 2022-05-19?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "66.67"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Cured Meats and Cold Cuts' for A4F_44160 within one week, starting from 2022-05-22?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Cured Meats and Cold Cuts' for A4F_44160 within one week, starting from 2022-05-22?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "4.55"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were cooking_style='Fermented' for A4F_94336 within one week, starting from 2022-05-29?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were cooking_style='Fermented' for A4F_94336 within one week, starting from 2022-05-29?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "18.18"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Vegetables and Greens' for A4F_94601 within one week, starting from 2022-05-25?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Vegetables and Greens' for A4F_94601 within one week, starting from 2022-05-25?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "20.51"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were cooking_style='Grilled' for A4F_89897 within one week, starting from 2022-05-22?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were cooking_style='Grilled' for A4F_89897 within one week, starting from 2022-05-22?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "8.14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Yogurt and Fresh Cheese' for A4F_99000 within one week, starting from 2022-06-12?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Yogurt and Fresh Cheese' for A4F_99000 within one week, starting from 2022-06-12?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "16.67"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Olive Oil' for A4F_60728 within one week, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Olive Oil' for A4F_60728 within one week, starting from 2022-06-11?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "6.25"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were cooking_style='Oven-Baked' for A4F_17419 within one week, starting from 2022-06-13?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were cooking_style='Oven-Baked' for A4F_17419 within one week, starting from 2022-06-13?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "32.98"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Raw or Roasted Nuts' for A4F_41207 within one week, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Raw or Roasted Nuts' for A4F_41207 within one week, starting from 2022-06-11?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "3.85"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Whole Grains' for A4F_56718 within one week, starting from 2022-05-22?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Whole Grains' for A4F_56718 within one week, starting from 2022-05-22?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "14.29"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Breakfast Cereals' for A4F_60728 within one week, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Breakfast Cereals' for A4F_60728 within one week, starting from 2022-06-11?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "4.17"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Rice' for A4F_24211 within one week, starting from 2022-06-03?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Rice' for A4F_24211 within one week, starting from 2022-06-03?\nOutput requirement: return 1 value(s); types (ordered): {else}", "Answer": "2.7"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Croquettes' for A4F_74742 within one week, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Croquettes' for A4F_74742 within one week, starting from 2022-06-11?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "2.04"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Sandwiches' for A4F_44929 within one week, starting from 2022-06-02?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Sandwiches' for A4F_44929 within one week, starting from 2022-06-02?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "2.82"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were subcategory='Bread' for A4F_39976 within one week, starting from 2022-06-10?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were subcategory='Bread' for A4F_39976 within one week, starting from 2022-06-10?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "20"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat percentage of meals were category='Sweets and Pastries' for A4F_29474 within one week, starting from 2022-06-14?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What percentage of meals were category='Sweets and Pastries' for A4F_29474 within one week, starting from 2022-06-14?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "0.94"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_89897 within one week, starting from 2022-05-20?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_89897 within one week, starting from 2022-05-20?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Vegetables and Fruits; Beverages; Cereals and Legumes; Protein Sources; Dairy and Plant-Based Drinks"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_18098 within one week, starting from 2022-06-06?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_18098 within one week, starting from 2022-06-06?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Protein Sources; Cereals and Legumes; Vegetables and Fruits; Oils and Fats; Dairy and Plant-Based Drinks"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 cooking styles for A4F_91362 within one week, starting from 2022-05-25?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 cooking styles for A4F_91362 within one week, starting from 2022-05-25?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {else}; {word}", "Answer": "Fresh; Boiled or Steamed; Grilled; Preserved (Canned or Jarred); Oven-Baked"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 subcategories for A4F_68106 within one week, starting from 2022-05-19?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 subcategories for A4F_68106 within one week, starting from 2022-05-19?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Fruits; Bread; Vegetables and Greens; Yogurt and Fresh Cheese; Processed Dairy"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_70954 within one week, starting from 2022-06-13?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_70954 within one week, starting from 2022-06-13?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Vegetables and Fruits; Beverages; Protein Sources; Cereals and Legumes; Dairy and Plant-Based Drinks"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 subcategories for A4F_65060 within one week, starting from 2022-05-22?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 subcategories for A4F_65060 within one week, starting from 2022-05-22?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Fruits; Vegetables and Greens; Yogurt and Fresh Cheese; Cured Meats and Cold Cuts; Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_28689 within one week, starting from 2022-05-23?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_28689 within one week, starting from 2022-05-23?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Vegetables and Fruits; Dairy and Plant-Based Drinks; Cereals and Legumes; Protein Sources; Fast Food"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 cooking styles for A4F_22483 within one week, starting from 2022-05-31?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 cooking styles for A4F_22483 within one week, starting from 2022-05-31?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {else}", "Answer": "Fresh; Boiled or Steamed; Oven-Baked; Fermented; Preserved (Canned or Jarred)"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_34415 within one week, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_34415 within one week, starting from 2022-06-11?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Vegetables and Fruits; Protein Sources; Dairy and Plant-Based Drinks; Beverages; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 subcategories for A4F_70804 within one week, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 subcategories for A4F_70804 within one week, starting from 2022-06-11?\nOutput requirement: return 5 value(s); types (ordered): {word}; {else}; {word}; {word}; {else}", "Answer": "Fruits; Other Cereals (Quinoa and Others); Processed Dairy; Yogurt and Fresh Cheese; Infusions (Coffee and Others)"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_89897 within one week, starting from 2022-05-18?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_89897 within one week, starting from 2022-05-18?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Vegetables and Fruits; Beverages; Cereals and Legumes; Protein Sources; Dairy and Plant-Based Drinks"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_33497 within one week, starting from 2022-05-19?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_33497 within one week, starting from 2022-05-19?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Beverages; Cereals and Legumes; Vegetables and Fruits; Oils and Fats; Dairy and Plant-Based Drinks"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_68106 within one week, starting from 2022-05-20?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_68106 within one week, starting from 2022-05-20?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Vegetables and Fruits; Cereals and Legumes; Beverages; Dairy and Plant-Based Drinks; Protein Sources"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 subcategories for A4F_98453 within one week, starting from 2022-06-16?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 subcategories for A4F_98453 within one week, starting from 2022-06-16?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {else}; {word}", "Answer": "Sauces and Condiments; Vegetables and Greens; Burgers; Infusions (Coffee and Others); Other Meats"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_79824 within one week, starting from 2022-06-07?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_79824 within one week, starting from 2022-06-07?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Vegetables and Fruits; Dairy and Plant-Based Drinks; Cereals and Legumes; Protein Sources; Oils and Fats"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 cooking styles for A4F_37469 within one week, starting from 2022-05-22?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 cooking styles for A4F_37469 within one week, starting from 2022-05-22?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Fresh; Boiled or Steamed; Oven-Baked; Grilled; Fried"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 cooking styles for A4F_98040 within one week, starting from 2022-06-07?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 cooking styles for A4F_98040 within one week, starting from 2022-06-07?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Fresh; Oven-Baked; Grilled; Boiled or Steamed; Stewed"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 subcategories for A4F_70068 within one week, starting from 2022-06-16?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 subcategories for A4F_70068 within one week, starting from 2022-06-16?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Vegetables and Greens; Fruits; Bread; Sliced Bread; Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 subcategories for A4F_42312 within one week, starting from 2022-05-24?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 subcategories for A4F_42312 within one week, starting from 2022-05-24?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Fruits; Vegetables and Greens; Bread; Olive Oil; Fish"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_28689 within one week, starting from 2022-05-26?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_28689 within one week, starting from 2022-05-26?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Vegetables and Fruits; Dairy and Plant-Based Drinks; Cereals and Legumes; Protein Sources; Fast Food"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 subcategories for A4F_22643 within one week, starting from 2022-06-07?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 subcategories for A4F_22643 within one week, starting from 2022-06-07?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Bread; Fruits; Vegetables and Greens; Soft Drinks; Yogurt and Fresh Cheese"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 cooking styles for A4F_60983 within one week, starting from 2022-05-24?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 cooking styles for A4F_60983 within one week, starting from 2022-05-24?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Fresh; Oven-Baked; Grilled; Boiled or Steamed; Fermented"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 subcategories for A4F_17419 within one week, starting from 2022-06-12?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 subcategories for A4F_17419 within one week, starting from 2022-06-12?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {else}", "Answer": "Fruits; Bread; Biscuits; Vegetables and Greens; Infusions (Coffee and Others)"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 cooking styles for A4F_60728 within one week, starting from 2022-06-02?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 cooking styles for A4F_60728 within one week, starting from 2022-06-02?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Fresh; Boiled or Steamed; Grilled; Oven-Baked; Fried"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 cooking styles for A4F_69129 within one week, starting from 2022-05-23?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 cooking styles for A4F_69129 within one week, starting from 2022-05-23?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Grilled; Boiled or Steamed; Fresh; Oven-Baked; Fermented"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_17705 within one week, starting from 2022-05-26?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_17705 within one week, starting from 2022-05-26?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Vegetables and Fruits; Protein Sources; Cereals and Legumes; Dairy and Plant-Based Drinks; Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 cooking styles for A4F_17419 within one week, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 cooking styles for A4F_17419 within one week, starting from 2022-06-09?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Fresh; Oven-Baked; Boiled or Steamed; Grilled; Fermented"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_97386 within one week, starting from 2022-06-08?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_97386 within one week, starting from 2022-06-08?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Protein Sources; Vegetables and Fruits; Cereals and Legumes; Fast Food; Oils and Fats"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 cooking styles for A4F_96181 within one week, starting from 2022-06-05?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 cooking styles for A4F_96181 within one week, starting from 2022-06-05?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Fresh; Oven-Baked; Boiled or Steamed; Fermented; Grilled"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat are the top 5 categories for A4F_92332 within one week, starting from 2022-06-07?\n\nSchema (DDL):\n```sql\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (`id`,`ts`,`image_id`,`category`,`subcategory`,`cooking_style`),\n  KEY `idx_id_ts` (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note (for SQL tasks):\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For \"times\" counts across a day/week, count distinct meals (ts) that include the label.\n--     A common pattern: COUNT(DISTINCT CASE WHEN <label predicate> THEN CONCAT(id,'#',ts) END)\n-- Use DATE(ts) for day filtering and 7-day windows.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What are the top 5 categories for A4F_92332 within one week, starting from 2022-06-07?\nOutput requirement: return 5 value(s); types (ordered): {word}; {word}; {word}; {word}; {word}", "Answer": "Vegetables and Fruits; Cereals and Legumes; Dairy and Plant-Based Drinks; Protein Sources; Oils and Fats"}
