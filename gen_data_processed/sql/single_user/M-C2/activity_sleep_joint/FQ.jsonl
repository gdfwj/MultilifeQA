{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-19, how many steps did A4F_51606 take and how many minutes_asleep did he/she get that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-19, how many steps did A4F_51606 take and how many minutes_asleep did he/she get that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "7095; 439"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-12, how many steps did A4F_39976 take and how many minutes_asleep did he/she get that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-12, how many steps did A4F_39976 take and how many minutes_asleep did he/she get that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "15014; 439"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-11, how many steps did A4F_94120 take and how many minutes_asleep did he/she get that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-11, how many steps did A4F_94120 take and how many minutes_asleep did he/she get that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "10661; 595"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-19, how many steps did A4F_27052 take and how many minutes_asleep did he/she get that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-19, how many steps did A4F_27052 take and how many minutes_asleep did he/she get that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "6565; 335"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-02, how many steps did A4F_24211 take and how many minutes_asleep did he/she get that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-02, how many steps did A4F_24211 take and how many minutes_asleep did he/she get that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "6367; 407"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-22, how many calories did A4F_94120 burn and how long did he/she stay in bed?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-22, how many calories did A4F_94120 burn and how long did he/she stay in bed?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {integer}", "Answer": "2169.14; 667"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-04, how many calories did A4F_10709 burn and how long did he/she stay in bed?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-04, how many calories did A4F_10709 burn and how long did he/she stay in bed?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {integer}", "Answer": "3318.51; 604"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-12, how many calories did A4F_71665 burn and how long did he/she stay in bed?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-12, how many calories did A4F_71665 burn and how long did he/she stay in bed?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {integer}", "Answer": "3283.45; 358"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-22, how many calories did A4F_89897 burn and how long did he/she stay in bed?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-22, how many calories did A4F_89897 burn and how long did he/she stay in bed?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {integer}", "Answer": "2812.74; 292"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-28, how many calories did A4F_68106 burn and how long did he/she stay in bed?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-28, how many calories did A4F_68106 burn and how long did he/she stay in bed?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {integer}", "Answer": "2679.12; 536"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-30, how many very_active_minutes did A4F_84962 have and how many minutes_in_deep_sleep did he/she get that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-30, how many very_active_minutes did A4F_84962 have and how many minutes_in_deep_sleep did he/she get that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "26; 38"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-13, how many very_active_minutes did A4F_97386 have and how many minutes_in_deep_sleep did he/she get that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-13, how many very_active_minutes did A4F_97386 have and how many minutes_in_deep_sleep did he/she get that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "10; 46"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-09, how many very_active_minutes did A4F_40008 have and how many minutes_in_deep_sleep did he/she get that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-09, how many very_active_minutes did A4F_40008 have and how many minutes_in_deep_sleep did he/she get that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "36; 42"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-22, how many very_active_minutes did A4F_67598 have and how many minutes_in_deep_sleep did he/she get that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-22, how many very_active_minutes did A4F_67598 have and how many minutes_in_deep_sleep did he/she get that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "28; 60"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-08, how many very_active_minutes did A4F_34415 have and how many minutes_in_deep_sleep did he/she get that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-08, how many very_active_minutes did A4F_34415 have and how many minutes_in_deep_sleep did he/she get that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "60; 71"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-10, what was A4F_25413's total sedentary_minutes and how many minutes_awake did he/she have during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-10, what was A4F_25413's total sedentary_minutes and how many minutes_awake did he/she have during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "645; 42"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-04, what was A4F_94336's total sedentary_minutes and how many minutes_awake did he/she have during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-04, what was A4F_94336's total sedentary_minutes and how many minutes_awake did he/she have during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "225; 45"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-22, what was A4F_78358's total sedentary_minutes and how many minutes_awake did he/she have during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-22, what was A4F_78358's total sedentary_minutes and how many minutes_awake did he/she have during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "109; 68"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-28, what was A4F_42312's total sedentary_minutes and how many minutes_awake did he/she have during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-28, what was A4F_42312's total sedentary_minutes and how many minutes_awake did he/she have during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "271; 98"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-02, what was A4F_18098's total sedentary_minutes and how many minutes_awake did he/she have during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-02, what was A4F_18098's total sedentary_minutes and how many minutes_awake did he/she have during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "1286; 66"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-26 21:57:48, what was A4F_60983's average_heart_rate during Walk and what was his/her rmssd during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-26 21:57:48, what was A4F_60983's average_heart_rate during Walk and what was his/her rmssd during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "88; 22.6"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-06 16:58:11, what was A4F_79824's average_heart_rate during Walk and what was his/her rmssd during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-06 16:58:11, what was A4F_79824's average_heart_rate during Walk and what was his/her rmssd during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "113; 34.77"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-24 08:44:36, what was A4F_76068's average_heart_rate during Walk and what was his/her rmssd during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-24 08:44:36, what was A4F_76068's average_heart_rate during Walk and what was his/her rmssd during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "111; 96.04"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-25 10:54:14, what was A4F_77391's average_heart_rate during Walk and what was his/her rmssd during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-25 10:54:14, what was A4F_77391's average_heart_rate during Walk and what was his/her rmssd during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "108; 32.24"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-19 18:09:32, what was A4F_98040's average_heart_rate during Walk and what was his/her rmssd during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-19 18:09:32, what was A4F_98040's average_heart_rate during Walk and what was his/her rmssd during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "95; 32.41"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-08, what was A4F_91594's resting_heart_rate and his/her nrem_hr during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-08, what was A4F_91594's resting_heart_rate and his/her nrem_hr during sleep?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "59.51; 60.84"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-25, what was A4F_65724's resting_heart_rate and his/her nrem_hr during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-25, what was A4F_65724's resting_heart_rate and his/her nrem_hr during sleep?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "67.87; 64.98"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-11, what was A4F_20573's resting_heart_rate and his/her nrem_hr during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-11, what was A4F_20573's resting_heart_rate and his/her nrem_hr during sleep?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "54.92; 55.43"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-18, what was A4F_56296's resting_heart_rate and his/her nrem_hr during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-18, what was A4F_56296's resting_heart_rate and his/her nrem_hr during sleep?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "59.91; 59.52"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-18, what was A4F_84740's resting_heart_rate and his/her nrem_hr during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-18, what was A4F_84740's resting_heart_rate and his/her nrem_hr during sleep?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "74.68; 77.81"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-27, how many cardio_minutes did A4F_76957 have and what was his/her entropy during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-27, how many cardio_minutes did A4F_76957 have and what was his/her entropy during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "2; 2.67"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-07, how many cardio_minutes did A4F_97386 have and what was his/her entropy during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-07, how many cardio_minutes did A4F_97386 have and what was his/her entropy during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "2; 3.72"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-15, how many cardio_minutes did A4F_60429 have and what was his/her entropy during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-15, how many cardio_minutes did A4F_60429 have and what was his/her entropy during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "4; 3.21"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-25, how many cardio_minutes did A4F_44160 have and what was his/her entropy during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-25, how many cardio_minutes did A4F_44160 have and what was his/her entropy during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "2; 2.76"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-19, how many cardio_minutes did A4F_56718 have and what was his/her entropy during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-19, how many cardio_minutes did A4F_56718 have and what was his/her entropy during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "20; 2.02"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-02 19:07:38, how many calories did A4F_53145 burn and what was his/her sleep_average_oxygen_saturation that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-02 19:07:38, how many calories did A4F_53145 burn and what was his/her sleep_average_oxygen_saturation that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "117; 94.9"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-29 09:48:42, how many calories did A4F_65695 burn and what was his/her sleep_average_oxygen_saturation that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-29 09:48:42, how many calories did A4F_65695 burn and what was his/her sleep_average_oxygen_saturation that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "625; 96.9"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-12 09:49:57, how many calories did A4F_99000 burn and what was his/her sleep_average_oxygen_saturation that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-12 09:49:57, how many calories did A4F_99000 burn and what was his/her sleep_average_oxygen_saturation that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "942; 94.1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-08 21:49:28, how many calories did A4F_96181 burn and what was his/her sleep_average_oxygen_saturation that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-08 21:49:28, how many calories did A4F_96181 burn and what was his/her sleep_average_oxygen_saturation that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "197; 93"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-30 09:58:40, how many calories did A4F_44160 burn and what was his/her sleep_average_oxygen_saturation that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-30 09:58:40, how many calories did A4F_44160 burn and what was his/her sleep_average_oxygen_saturation that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "379; 95.2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-08, how many steps did A4F_50227 take and what was his/her lower_bound_oxygen_saturation during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-08, how many steps did A4F_50227 take and what was his/her lower_bound_oxygen_saturation during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "11333; 86.8"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-26, how many steps did A4F_28689 take and what was his/her lower_bound_oxygen_saturation during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-26, how many steps did A4F_28689 take and what was his/her lower_bound_oxygen_saturation during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "15350; 92.8"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-29, how many steps did A4F_56718 take and what was his/her lower_bound_oxygen_saturation during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-29, how many steps did A4F_56718 take and what was his/her lower_bound_oxygen_saturation during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "7093; 90.5"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-11, how many steps did A4F_18098 take and what was his/her lower_bound_oxygen_saturation during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-11, how many steps did A4F_18098 take and what was his/her lower_bound_oxygen_saturation during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "26518; 92.6"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-02, how many steps did A4F_53145 take and what was his/her lower_bound_oxygen_saturation during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-02, how many steps did A4F_53145 take and what was his/her lower_bound_oxygen_saturation during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "11852; 92.3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-21 19:34:49, what was A4F_94601's average_heart_rate during Walk and his/her upper_bound_oxygen_saturation that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-21 19:34:49, what was A4F_94601's average_heart_rate during Walk and his/her upper_bound_oxygen_saturation that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "86; 100"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-28 10:54:40, what was A4F_42312's average_heart_rate during Walk and his/her upper_bound_oxygen_saturation that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-28 10:54:40, what was A4F_42312's average_heart_rate during Walk and his/her upper_bound_oxygen_saturation that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "113; 99"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-14 20:57:59, what was A4F_48857's average_heart_rate during Walk and his/her upper_bound_oxygen_saturation that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-14 20:57:59, what was A4F_48857's average_heart_rate during Walk and his/her upper_bound_oxygen_saturation that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "110; 92"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-22 22:14:45, what was A4F_53145's average_heart_rate during Walk and his/her upper_bound_oxygen_saturation that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-22 22:14:45, what was A4F_53145's average_heart_rate during Walk and his/her upper_bound_oxygen_saturation that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "120; 98.8"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-11 19:45:51, what was A4F_99000's average_heart_rate during Workout and his/her upper_bound_oxygen_saturation that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-11 19:45:51, what was A4F_99000's average_heart_rate during Workout and his/her upper_bound_oxygen_saturation that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "109; 97.4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-05, how many very_active_minutes did A4F_97386 have and what was his/her full_sleep_breathing_rate during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-05, how many very_active_minutes did A4F_97386 have and what was his/her full_sleep_breathing_rate during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "89; 13.2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-05, how many very_active_minutes did A4F_65724 have and what was his/her full_sleep_breathing_rate during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-05, how many very_active_minutes did A4F_65724 have and what was his/her full_sleep_breathing_rate during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "14; 13.4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-11, how many very_active_minutes did A4F_34415 have and what was his/her full_sleep_breathing_rate during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-11, how many very_active_minutes did A4F_34415 have and what was his/her full_sleep_breathing_rate during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "2; 14.2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-05, how many very_active_minutes did A4F_65724 have and what was his/her full_sleep_breathing_rate during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-05, how many very_active_minutes did A4F_65724 have and what was his/her full_sleep_breathing_rate during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "14; 13.4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-17, how many very_active_minutes did A4F_97386 have and what was his/her full_sleep_breathing_rate during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-17, how many very_active_minutes did A4F_97386 have and what was his/her full_sleep_breathing_rate during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "4; 14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-09 19:03:36, what was A4F_10021's average_heart_rate during Walk and what was his/her rem_sleep_breathing_rate that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-09 19:03:36, what was A4F_10021's average_heart_rate during Walk and what was his/her rem_sleep_breathing_rate that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "87; 16.8"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-11 20:14:05, what was A4F_99000's average_heart_rate during Walk and what was his/her rem_sleep_breathing_rate that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-11 20:14:05, what was A4F_99000's average_heart_rate during Walk and what was his/her rem_sleep_breathing_rate that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "86; 14.6"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-06 19:29:19, what was A4F_35752's average_heart_rate during Workout and what was his/her rem_sleep_breathing_rate that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-06 19:29:19, what was A4F_35752's average_heart_rate during Workout and what was his/her rem_sleep_breathing_rate that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "88; 22"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-21 12:07:50, what was A4F_69129's average_heart_rate during Walk and what was his/her rem_sleep_breathing_rate that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-21 12:07:50, what was A4F_69129's average_heart_rate during Walk and what was his/her rem_sleep_breathing_rate that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "81; -1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-19 18:16:44, what was A4F_39976's average_heart_rate during Walk and what was his/her rem_sleep_breathing_rate that night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-19 18:16:44, what was A4F_39976's average_heart_rate during Walk and what was his/her rem_sleep_breathing_rate that night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "91; 15.2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-21, how many calories did A4F_70068 burn and what was his/her nightly_temperature during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-21, how many calories did A4F_70068 burn and what was his/her nightly_temperature during sleep?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "3580.39; 33.81"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-28, how many calories did A4F_43794 burn and what was his/her nightly_temperature during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-28, how many calories did A4F_43794 burn and what was his/her nightly_temperature during sleep?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "3417.49; 32.51"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-21, how many calories did A4F_56718 burn and what was his/her nightly_temperature during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-21, how many calories did A4F_56718 burn and what was his/her nightly_temperature during sleep?\nOutput requirement: return 2 value(s); types (ordered): {else}; {real number (two decimal)}", "Answer": "3508.3; 32.97"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-27, how many calories did A4F_89897 burn and what was his/her nightly_temperature during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-27, how many calories did A4F_89897 burn and what was his/her nightly_temperature during sleep?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {integer}", "Answer": "2619.61; 33"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-23, how many calories did A4F_32988 burn and what was his/her nightly_temperature during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-23, how many calories did A4F_32988 burn and what was his/her nightly_temperature during sleep?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "2388.88; 32.81"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-27, how many sedentary_minutes did A4F_51606 have and what was his/her baseline_relative_nightly_standard_deviation during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-27, how many sedentary_minutes did A4F_51606 have and what was his/her baseline_relative_nightly_standard_deviation during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "318; 0.34"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-27, how many sedentary_minutes did A4F_76292 have and what was his/her baseline_relative_nightly_standard_deviation during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-27, how many sedentary_minutes did A4F_76292 have and what was his/her baseline_relative_nightly_standard_deviation during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "391; 0.2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-05-31, how many sedentary_minutes did A4F_13368 have and what was his/her baseline_relative_nightly_standard_deviation during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-05-31, how many sedentary_minutes did A4F_13368 have and what was his/her baseline_relative_nightly_standard_deviation during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "336; 0.43"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-09, how many sedentary_minutes did A4F_70954 have and what was his/her baseline_relative_nightly_standard_deviation during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-09, how many sedentary_minutes did A4F_70954 have and what was his/her baseline_relative_nightly_standard_deviation during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "833; 0.15"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-20, how many sedentary_minutes did A4F_74720 have and what was his/her baseline_relative_nightly_standard_deviation during sleep?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-20, how many sedentary_minutes did A4F_74720 have and what was his/her baseline_relative_nightly_standard_deviation during sleep?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "823; 0.56"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-04 12:42:39, what was A4F_94336's average_heart_rate during Walk and his/her baseline_relative_sample_sum at night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-04 12:42:39, what was A4F_94336's average_heart_rate during Walk and his/her baseline_relative_sample_sum at night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "96; 199.84"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-12 13:50:57, what was A4F_10021's average_heart_rate during Bike and his/her baseline_relative_sample_sum at night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-12 13:50:57, what was A4F_10021's average_heart_rate during Bike and his/her baseline_relative_sample_sum at night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "124; 49.49"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-11 15:53:51, what was A4F_31649's average_heart_rate during Walk and his/her baseline_relative_sample_sum at night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-11 15:53:51, what was A4F_31649's average_heart_rate during Walk and his/her baseline_relative_sample_sum at night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "99; 4.67"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-07 11:20:12, what was A4F_25413's average_heart_rate during Walk and his/her baseline_relative_sample_sum at night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-07 11:20:12, what was A4F_25413's average_heart_rate during Walk and his/her baseline_relative_sample_sum at night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "109; -372.57"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nOn 2022-06-15 11:46:17, what was A4F_97386's average_heart_rate during Walk and his/her baseline_relative_sample_sum at night?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: On 2022-06-15 11:46:17, what was A4F_97386's average_heart_rate during Walk and his/her baseline_relative_sample_sum at night?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "133; 506.38"}
