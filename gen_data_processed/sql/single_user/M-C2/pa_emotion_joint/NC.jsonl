{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_17419 within one week starting from 2022-06-08, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_17419 within one week starting from 2022-06-08, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "23004 on 2022-06-10; 78 on 2022-06-13"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_31033 within one week starting from 2022-06-08, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_31033 within one week starting from 2022-06-08, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "15482 on 2022-06-11; 83 on 2022-06-08"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_74720 within one week starting from 2022-06-15, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_74720 within one week starting from 2022-06-15, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "5343 on 2022-06-15; 0 on 2022-06-15"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_44160 within one week starting from 2022-05-19, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_44160 within one week starting from 2022-05-19, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "12393 on 2022-05-25; 0 on 2022-05-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_91362 within one week starting from 2022-05-27, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_91362 within one week starting from 2022-05-27, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "14110 on 2022-05-27; 0 on 2022-05-27"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_82994 within one week starting from 2022-06-08, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_82994 within one week starting from 2022-06-08, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "14916 on 2022-06-13; 81 on 2022-06-13"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_27052 within one week starting from 2022-05-22, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_27052 within one week starting from 2022-05-22, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "5361 on 2022-05-26; 0 on 2022-05-22"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_72388 within one week starting from 2022-06-11, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_72388 within one week starting from 2022-06-11, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "10206 on 2022-06-16; 0 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_17705 within one week starting from 2022-05-20, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_17705 within one week starting from 2022-05-20, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "11857 on 2022-05-25; 0 on 2022-05-20"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_97618 within one week starting from 2022-06-16, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_97618 within one week starting from 2022-06-16, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "12645 on 2022-06-18; 89 on 2022-06-20"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_10709 within one week starting from 2022-05-25, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_10709 within one week starting from 2022-05-25, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "14319 on 2022-05-26; 0 on 2022-05-25"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_60728 within one week starting from 2022-06-11, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_60728 within one week starting from 2022-06-11, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "14722 on 2022-06-11; 0 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_48857 within one week starting from 2022-06-07, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_48857 within one week starting from 2022-06-07, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "17261 on 2022-06-09; 0 on 2022-06-07"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_65695 within one week starting from 2022-05-19, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_65695 within one week starting from 2022-05-19, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "15120 on 2022-05-20; 0 on 2022-05-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_34415 within one week starting from 2022-06-12, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_34415 within one week starting from 2022-06-12, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "21312 on 2022-06-18; 0 on 2022-06-12"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_41207 within one week starting from 2022-06-14, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_41207 within one week starting from 2022-06-14, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "10212 on 2022-06-15; 0 on 2022-06-14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_85240 within one week starting from 2022-05-22, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_85240 within one week starting from 2022-05-22, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "17496 on 2022-05-23; 0 on 2022-05-22"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_53145 within one week starting from 2022-05-21, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_53145 within one week starting from 2022-05-21, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "32320 on 2022-05-22; 83 on 2022-05-27"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_98453 within one week starting from 2022-06-11, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_98453 within one week starting from 2022-06-11, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "20262 on 2022-06-14; 0 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_41207 within one week starting from 2022-06-10, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_41207 within one week starting from 2022-06-10, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "13100 on 2022-06-12; 0 on 2022-06-10"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_42312 within one week starting from 2022-05-20, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_42312 within one week starting from 2022-05-20, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "25334 on 2022-05-21; 0 on 2022-05-20"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_17705 within one week starting from 2022-05-23, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_17705 within one week starting from 2022-05-23, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "11857 on 2022-05-25; 0 on 2022-05-23"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_73455 within one week starting from 2022-05-24, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_73455 within one week starting from 2022-05-24, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "19534 on 2022-05-25; 79 on 2022-05-24"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_70068 within one week starting from 2022-05-19, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_70068 within one week starting from 2022-05-19, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "34427 on 2022-05-25; 89 on 2022-05-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_60728 within one week starting from 2022-06-05, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_60728 within one week starting from 2022-06-05, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "14722 on 2022-06-11; 0 on 2022-06-05"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_32988 within one week starting from 2022-05-23, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_32988 within one week starting from 2022-05-23, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "14425 on 2022-05-28; 0 on 2022-05-23"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_84962 within one week starting from 2022-05-18, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_84962 within one week starting from 2022-05-18, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "14450 on 2022-05-24; 0 on 2022-05-18"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_20573 within one week starting from 2022-06-14, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_20573 within one week starting from 2022-06-14, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "18771 on 2022-06-18; 0 on 2022-06-14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_45863 within one week starting from 2022-05-26, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_45863 within one week starting from 2022-05-26, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "21634 on 2022-05-29; 89 on 2022-05-28"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest steps and the highest stress_score recorded for A4F_40008 within one week starting from 2022-06-04, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest steps and the highest stress_score recorded for A4F_40008 within one week starting from 2022-06-04, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "14375 on 2022-06-09; 72 on 2022-06-04"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_17419 within one week starting from 2022-06-08, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_17419 within one week starting from 2022-06-08, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "1395 on 2022-06-10; 40 on 2022-06-12"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_31033 within one week starting from 2022-06-08, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_31033 within one week starting from 2022-06-08, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "361 on 2022-06-11; 30 on 2022-06-08"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_74720 within one week starting from 2022-06-15, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_74720 within one week starting from 2022-06-15, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "0 on 2022-06-15; 0 on 2022-06-15"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_44160 within one week starting from 2022-05-19, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_44160 within one week starting from 2022-05-19, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "691 on 2022-05-19; 0 on 2022-05-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_91362 within one week starting from 2022-05-27, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_91362 within one week starting from 2022-05-27, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "887 on 2022-05-27; 0 on 2022-05-27"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_82994 within one week starting from 2022-06-08, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_82994 within one week starting from 2022-06-08, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "256 on 2022-06-12; 32 on 2022-06-08"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_27052 within one week starting from 2022-05-22, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_27052 within one week starting from 2022-05-22, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "121 on 2022-05-26; 0 on 2022-05-22"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_72388 within one week starting from 2022-06-11, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_72388 within one week starting from 2022-06-11, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "354 on 2022-06-13; 0 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_17705 within one week starting from 2022-05-20, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_17705 within one week starting from 2022-05-20, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "832 on 2022-05-25; 0 on 2022-05-20"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_97618 within one week starting from 2022-06-16, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_97618 within one week starting from 2022-06-16, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "282 on 2022-06-19; 37 on 2022-06-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_10709 within one week starting from 2022-05-25, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_10709 within one week starting from 2022-05-25, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "838 on 2022-05-26; 0 on 2022-05-25"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_60728 within one week starting from 2022-06-11, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_60728 within one week starting from 2022-06-11, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "243 on 2022-06-17; 0 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_48857 within one week starting from 2022-06-07, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_48857 within one week starting from 2022-06-07, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "494 on 2022-06-11; 0 on 2022-06-07"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_65695 within one week starting from 2022-05-19, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_65695 within one week starting from 2022-05-19, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "609 on 2022-05-22; 0 on 2022-05-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_34415 within one week starting from 2022-06-12, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_34415 within one week starting from 2022-06-12, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "153 on 2022-06-12; 0 on 2022-06-12"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_41207 within one week starting from 2022-06-14, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_41207 within one week starting from 2022-06-14, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "0 on 2022-06-14; 0 on 2022-06-14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_85240 within one week starting from 2022-05-22, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_85240 within one week starting from 2022-05-22, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "704 on 2022-05-27; 0 on 2022-05-22"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_53145 within one week starting from 2022-05-21, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_53145 within one week starting from 2022-05-21, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "2855 on 2022-05-22; 38 on 2022-05-27"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_98453 within one week starting from 2022-06-11, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_98453 within one week starting from 2022-06-11, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "753 on 2022-06-12; 0 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_41207 within one week starting from 2022-06-10, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_41207 within one week starting from 2022-06-10, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "301 on 2022-06-12; 0 on 2022-06-10"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_42312 within one week starting from 2022-05-20, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_42312 within one week starting from 2022-05-20, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "855 on 2022-05-21; 0 on 2022-05-20"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_17705 within one week starting from 2022-05-23, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_17705 within one week starting from 2022-05-23, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "832 on 2022-05-25; 0 on 2022-05-23"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_73455 within one week starting from 2022-05-24, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_73455 within one week starting from 2022-05-24, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "774 on 2022-05-30; 40 on 2022-05-24"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_70068 within one week starting from 2022-05-19, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_70068 within one week starting from 2022-05-19, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "2999 on 2022-05-23; 36 on 2022-05-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_60728 within one week starting from 2022-06-05, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_60728 within one week starting from 2022-06-05, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "186 on 2022-06-10; 0 on 2022-06-05"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_32988 within one week starting from 2022-05-23, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_32988 within one week starting from 2022-05-23, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "425 on 2022-05-24; 0 on 2022-05-23"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_84962 within one week starting from 2022-05-18, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_84962 within one week starting from 2022-05-18, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "0 on 2022-05-18; 0 on 2022-05-18"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_20573 within one week starting from 2022-06-14, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_20573 within one week starting from 2022-06-14, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "723 on 2022-06-19; 0 on 2022-06-14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_45863 within one week starting from 2022-05-26, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_45863 within one week starting from 2022-05-26, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "1998 on 2022-05-29; 39 on 2022-05-28"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories burned and the highest exertion_points recorded for A4F_40008 within one week starting from 2022-06-04, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories burned and the highest exertion_points recorded for A4F_40008 within one week starting from 2022-06-04, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "381 on 2022-06-09; 29 on 2022-06-08"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_17419 within one week starting from 2022-06-08, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_17419 within one week starting from 2022-06-08, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "546 on 2022-06-11; 21 on 2022-06-08"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_31033 within one week starting from 2022-06-08, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_31033 within one week starting from 2022-06-08, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "435 on 2022-06-12; 24 on 2022-06-08"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_74720 within one week starting from 2022-06-15, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_74720 within one week starting from 2022-06-15, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "192 on 2022-06-15; 0 on 2022-06-15"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_44160 within one week starting from 2022-05-19, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_44160 within one week starting from 2022-05-19, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "413 on 2022-05-25; 0 on 2022-05-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_91362 within one week starting from 2022-05-27, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_91362 within one week starting from 2022-05-27, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "340 on 2022-05-28; 0 on 2022-05-27"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_82994 within one week starting from 2022-06-08, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_82994 within one week starting from 2022-06-08, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "360 on 2022-06-13; 24 on 2022-06-08"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_27052 within one week starting from 2022-05-22, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_27052 within one week starting from 2022-05-22, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "217 on 2022-05-23; 0 on 2022-05-22"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_72388 within one week starting from 2022-06-11, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_72388 within one week starting from 2022-06-11, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "288 on 2022-06-16; 0 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_17705 within one week starting from 2022-05-20, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_17705 within one week starting from 2022-05-20, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "269 on 2022-05-26; 0 on 2022-05-20"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_97618 within one week starting from 2022-06-16, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_97618 within one week starting from 2022-06-16, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "394 on 2022-06-21; 29 on 2022-06-22"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_10709 within one week starting from 2022-05-25, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_10709 within one week starting from 2022-05-25, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "324 on 2022-05-26; 0 on 2022-05-25"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_60728 within one week starting from 2022-06-11, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_60728 within one week starting from 2022-06-11, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "414 on 2022-06-11; 0 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_48857 within one week starting from 2022-06-07, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_48857 within one week starting from 2022-06-07, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "427 on 2022-06-09; 0 on 2022-06-07"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_65695 within one week starting from 2022-05-19, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_65695 within one week starting from 2022-05-19, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "359 on 2022-05-20; 0 on 2022-05-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_34415 within one week starting from 2022-06-12, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_34415 within one week starting from 2022-06-12, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "502 on 2022-06-17; 0 on 2022-06-12"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_41207 within one week starting from 2022-06-14, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_41207 within one week starting from 2022-06-14, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "316 on 2022-06-18; 0 on 2022-06-14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_85240 within one week starting from 2022-05-22, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_85240 within one week starting from 2022-05-22, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "429 on 2022-05-25; 0 on 2022-05-22"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_53145 within one week starting from 2022-05-21, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_53145 within one week starting from 2022-05-21, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "562 on 2022-05-26; 24 on 2022-05-27"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_98453 within one week starting from 2022-06-11, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_98453 within one week starting from 2022-06-11, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "639 on 2022-06-14; 0 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_41207 within one week starting from 2022-06-10, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_41207 within one week starting from 2022-06-10, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "440 on 2022-06-11; 0 on 2022-06-10"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_42312 within one week starting from 2022-05-20, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_42312 within one week starting from 2022-05-20, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "583 on 2022-05-21; 0 on 2022-05-20"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_17705 within one week starting from 2022-05-23, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_17705 within one week starting from 2022-05-23, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "400 on 2022-05-29; 0 on 2022-05-23"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_73455 within one week starting from 2022-05-24, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_73455 within one week starting from 2022-05-24, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "519 on 2022-05-25; 21 on 2022-05-24"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_70068 within one week starting from 2022-05-19, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_70068 within one week starting from 2022-05-19, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "680 on 2022-05-25; 29 on 2022-05-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_60728 within one week starting from 2022-06-05, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_60728 within one week starting from 2022-06-05, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "414 on 2022-06-11; 0 on 2022-06-05"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_32988 within one week starting from 2022-05-23, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_32988 within one week starting from 2022-05-23, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "412 on 2022-05-28; 0 on 2022-05-23"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_84962 within one week starting from 2022-05-18, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_84962 within one week starting from 2022-05-18, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "421 on 2022-05-18; 0 on 2022-05-18"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_20573 within one week starting from 2022-06-14, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_20573 within one week starting from 2022-06-14, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "360 on 2022-06-15; 0 on 2022-06-14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_45863 within one week starting from 2022-05-26, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_45863 within one week starting from 2022-05-26, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "400 on 2022-06-01; 25 on 2022-05-28"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWhat was the highest calories_minutes and the highest sleep_points recorded for A4F_40008 within one week starting from 2022-06-04, and on which days did they occur?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: What was the highest calories_minutes and the highest sleep_points recorded for A4F_40008 within one week starting from 2022-06-04, and on which days did they occur?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "406 on 2022-06-06; 21 on 2022-06-04"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-08, on how many days did A4F_17419 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-08, on how many days did A4F_17419 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-16, on how many days did A4F_97618 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-16, on how many days did A4F_97618 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-21, on how many days did A4F_53145 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-21, on how many days did A4F_53145 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-26, on how many days did A4F_45863 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-26, on how many days did A4F_45863 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-04, on how many days did A4F_40008 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-04, on how many days did A4F_40008 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-18, on how many days did A4F_51606 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-18, on how many days did A4F_51606 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-20, on how many days did A4F_76957 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-20, on how many days did A4F_76957 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-09, on how many days did A4F_29474 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-09, on how many days did A4F_29474 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-06, on how many days did A4F_79824 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-06, on how many days did A4F_79824 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-08, on how many days did A4F_97618 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-08, on how many days did A4F_97618 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-29, on how many days did A4F_77391 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-29, on how many days did A4F_77391 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-02, on how many days did A4F_28771 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-02, on how many days did A4F_28771 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-05, on how many days did A4F_29474 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-05, on how many days did A4F_29474 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-15, on how many days did A4F_98040 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-15, on how many days did A4F_98040 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-31, on how many days did A4F_43794 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-31, on how many days did A4F_43794 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-13, on how many days did A4F_39976 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-13, on how many days did A4F_39976 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-06, on how many days did A4F_10021 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-06, on how many days did A4F_10021 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-28, on how many days did A4F_53145 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-28, on how many days did A4F_53145 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-30, on how many days did A4F_73455 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-30, on how many days did A4F_73455 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-05, on how many days did A4F_97618 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-05, on how many days did A4F_97618 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-22, on how many days did A4F_56718 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-22, on how many days did A4F_56718 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-20, on how many days did A4F_67598 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-20, on how many days did A4F_67598 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-08, on how many days did A4F_67757 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-08, on how many days did A4F_67757 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-02, on how many days did A4F_79824 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-02, on how many days did A4F_79824 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-01, on how many days did A4F_65724 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-01, on how many days did A4F_65724 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-21, on how many days did A4F_89897 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-21, on how many days did A4F_89897 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-09, on how many days did A4F_39976 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-09, on how many days did A4F_39976 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-06, on how many days did A4F_67757 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-06, on how many days did A4F_67757 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-21, on how many days did A4F_68106 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-21, on how many days did A4F_68106 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-12, on how many days did A4F_17419 have above-average calories_minutes while also recording a below-average stress_score?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-12, on how many days did A4F_17419 have above-average calories_minutes while also recording a below-average stress_score?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-08, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-08, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "1395 on 2022-06-10; 68 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-08, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-08, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "361 on 2022-06-11; 83 on 2022-06-08"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-15, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-15, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "0 on 2022-06-15; 0 on 2022-06-15"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-19, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-19, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "691 on 2022-05-19; 0 on 2022-05-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-27, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-27, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "887 on 2022-05-27; 0 on 2022-05-27"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-08, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-08, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "256 on 2022-06-12; 74 on 2022-06-14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-22, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-22, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "121 on 2022-05-26; 0 on 2022-05-22"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-11, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-11, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "354 on 2022-06-13; 0 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-20, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-20, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "832 on 2022-05-25; 0 on 2022-05-20"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-16, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-16, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "282 on 2022-06-19; 81 on 2022-06-21"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-25, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-25, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "838 on 2022-05-26; 0 on 2022-05-25"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-11, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-11, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "243 on 2022-06-17; 0 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-07, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-07, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "494 on 2022-06-11; 0 on 2022-06-07"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-19, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-19, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "609 on 2022-05-22; 0 on 2022-05-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-12, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-12, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "153 on 2022-06-12; 0 on 2022-06-12"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-14, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-14, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "0 on 2022-06-14; 0 on 2022-06-14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-22, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-22, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "704 on 2022-05-27; 0 on 2022-05-22"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-21, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-21, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "2855 on 2022-05-22; 68 on 2022-05-21"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-11, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-11, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "753 on 2022-06-12; 0 on 2022-06-11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-10, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-10, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "301 on 2022-06-12; 0 on 2022-06-10"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-20, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-20, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "855 on 2022-05-21; 0 on 2022-05-20"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-23, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-23, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "832 on 2022-05-25; 0 on 2022-05-23"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-24, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-24, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "774 on 2022-05-30; 79 on 2022-05-24"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-19, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-19, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "2999 on 2022-05-23; 89 on 2022-05-19"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-05, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-05, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "186 on 2022-06-10; 0 on 2022-06-05"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-23, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-23, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "425 on 2022-05-24; 0 on 2022-05-23"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-18, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-18, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "0 on 2022-05-18; 0 on 2022-05-18"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-14, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-14, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "723 on 2022-06-19; 0 on 2022-06-14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-26, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-26, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "1998 on 2022-05-29; 84 on 2022-05-26"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-04, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering.\n\nCREATE TABLE `stress_daily_scores` (\n  `id`                    VARCHAR(20) NOT NULL,\n  `ts`                    DATETIME    NOT NULL,\n  `stress_score`          SMALLINT UNSIGNED,\n  `sleep_points`          SMALLINT,\n  `responsiveness_points` SMALLINT,\n  `exertion_points`       SMALLINT,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-04, what day showed the largest gap between calories burned being at its maximum and stress_score being at its minimum?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "381 on 2022-06-09; 64 on 2022-06-10"}
