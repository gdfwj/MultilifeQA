{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-13 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-13 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-31 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-31 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-05-28, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-05-28, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "lower"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-05, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-05, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "lower"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-09, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-09, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "higher"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users increase, starting from 2022-06-04?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users increase, starting from 2022-06-04?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users increase, starting from 2022-05-28?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users increase, starting from 2022-05-28?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-19 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-19 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-06-13?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-06-13?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users increase, starting from 2022-05-26?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users increase, starting from 2022-05-26?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-02 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-02 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-20 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-20 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-20 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-20 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users increase, starting from 2022-05-30?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users increase, starting from 2022-05-30?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-06-16?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-06-16?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_71665's nightly_temperature higher than the average across all users, starting from 2022-06-13?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_71665's nightly_temperature higher than the average across all users, starting from 2022-06-13?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-08 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-08 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-05-27, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-05-27, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "higher"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users increase, starting from 2022-06-03?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users increase, starting from 2022-06-03?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-05-31?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-05-31?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-06-06?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-06-06?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-03, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-03, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "lower"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-21 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-21 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-21 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-21 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_65060's nightly_temperature lower than the average across all users, starting from 2022-05-31?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_65060's nightly_temperature lower than the average across all users, starting from 2022-05-31?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-14 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-14 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users increase, starting from 2022-06-14?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users increase, starting from 2022-06-14?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-10 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-10 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users increase, starting from 2022-06-12?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users increase, starting from 2022-06-12?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users increase, starting from 2022-05-29?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users increase, starting from 2022-05-29?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_44160's nightly_temperature lower than the average across all users, starting from 2022-05-26?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_44160's nightly_temperature lower than the average across all users, starting from 2022-05-26?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "6"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-27 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-27 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-05-29, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-05-29, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "lower"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users increase, starting from 2022-06-07?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users increase, starting from 2022-06-07?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-23 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-23 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-05-31, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-05-31, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "lower"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_76383's nightly_temperature lower than the average across all users, starting from 2022-05-30?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_76383's nightly_temperature lower than the average across all users, starting from 2022-05-30?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "5"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-08, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-08, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "higher"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-01 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-01 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-07 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-07 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-02, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-02, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "lower"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-06-05?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-06-05?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_41207's nightly_temperature lower than the average across all users, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_41207's nightly_temperature lower than the average across all users, starting from 2022-06-11?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "9"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-04, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-04, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "lower"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-07, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-07, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "higher"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-06, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-06, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "higher"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-06-09?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-24 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-24 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_10141's nightly_temperature lower than the average across all users, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_10141's nightly_temperature lower than the average across all users, starting from 2022-06-11?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "7"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-05-24?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-05-24?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-23 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-23 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_96181's nightly_temperature lower than the average across all users, starting from 2022-06-06?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_96181's nightly_temperature lower than the average across all users, starting from 2022-06-06?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-05-30, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-05-30, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "lower"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_89897's nightly_temperature lower than the average across all users, starting from 2022-05-21?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_89897's nightly_temperature lower than the average across all users, starting from 2022-05-21?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "6"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-03 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-03 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-14, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-14, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "higher"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_67757's nightly_temperature lower than the average across all users, starting from 2022-06-07?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_67757's nightly_temperature lower than the average across all users, starting from 2022-06-07?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "5"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-30 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-30 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-10, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-10, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "higher"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-09 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-09 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_39976's nightly_temperature lower than the average across all users, starting from 2022-06-14?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_39976's nightly_temperature lower than the average across all users, starting from 2022-06-14?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "8"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-05-23?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-05-23?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-18 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-18 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-16 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-16 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-28 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-28 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-26 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-26 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-17, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-17, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "lower"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-22 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-22 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-11 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-11 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-05 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-05 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-17 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-17 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "decrease"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-15 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-06-15 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-05-26, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-05-26, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "higher"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_72388's nightly_temperature lower than the average across all users, starting from 2022-06-15?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_72388's nightly_temperature lower than the average across all users, starting from 2022-06-15?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "9"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-16, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-16, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "lower"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_28771's nightly_temperature lower than the average across all users, starting from 2022-06-04?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_28771's nightly_temperature lower than the average across all users, starting from 2022-06-04?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "5"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nDid the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-29 compared to the previous day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Did the average nightly_temperature across all users increase, decrease, or remain the same on 2022-05-29 compared to the previous day?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "increase"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_91516's nightly_temperature lower than the average across all users, starting from 2022-05-24?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_91516's nightly_temperature lower than the average across all users, starting from 2022-05-24?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_31033's nightly_temperature lower than the average across all users, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_31033's nightly_temperature lower than the average across all users, starting from 2022-06-11?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "13"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_27766's nightly_temperature lower than the average across all users, starting from 2022-06-10?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_27766's nightly_temperature lower than the average across all users, starting from 2022-06-10?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "7"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_84962's nightly_temperature lower than the average across all users, starting from 2022-05-31?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_84962's nightly_temperature lower than the average across all users, starting from 2022-05-31?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-11, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-11, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "higher"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-13, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-13, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "higher"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-15, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-15, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "higher"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-12, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-12, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "higher"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWas the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-01, compared to the previous week?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Was the average baseline_relative_nightly_standard_deviation across all users higher, lower, or the same within one week, starting from 2022-06-01, compared to the previous week?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "lower"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_73455's nightly_temperature lower than the average across all users, starting from 2022-06-01?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_73455's nightly_temperature lower than the average across all users, starting from 2022-06-01?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "7"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_70954's nightly_temperature lower than the average across all users, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_70954's nightly_temperature lower than the average across all users, starting from 2022-06-11?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "9"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_89897's nightly_temperature lower than the average across all users, starting from 2022-05-27?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_89897's nightly_temperature lower than the average across all users, starting from 2022-05-27?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "6"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_24211's nightly_temperature lower than the average across all users, starting from 2022-06-15?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_24211's nightly_temperature lower than the average across all users, starting from 2022-06-15?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_56296's nightly_temperature lower than the average across all users, starting from 2022-06-13?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_56296's nightly_temperature lower than the average across all users, starting from 2022-06-13?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_92332's nightly_temperature lower than the average across all users, starting from 2022-06-08?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_92332's nightly_temperature lower than the average across all users, starting from 2022-06-08?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "12"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_94120's nightly_temperature lower than the average across all users, starting from 2022-06-08?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_94120's nightly_temperature lower than the average across all users, starting from 2022-06-08?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "8"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_65060's nightly_temperature lower than the average across all users, starting from 2022-05-29?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_65060's nightly_temperature lower than the average across all users, starting from 2022-05-29?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "5"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_65724's nightly_temperature lower than the average across all users, starting from 2022-05-26?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_65724's nightly_temperature lower than the average across all users, starting from 2022-05-26?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_65724's nightly_temperature lower than the average across all users, starting from 2022-05-31?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_65724's nightly_temperature lower than the average across all users, starting from 2022-05-31?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "9"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_44160's nightly_temperature lower than the average across all users, starting from 2022-05-25?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_44160's nightly_temperature lower than the average across all users, starting from 2022-05-25?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "7"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_27766's nightly_temperature lower than the average across all users, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_27766's nightly_temperature lower than the average across all users, starting from 2022-06-09?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "8"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_27766's nightly_temperature lower than the average across all users, starting from 2022-06-12?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_27766's nightly_temperature lower than the average across all users, starting from 2022-06-12?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "5"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_76383's nightly_temperature lower than the average across all users, starting from 2022-05-23?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_76383's nightly_temperature lower than the average across all users, starting from 2022-05-23?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "12"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_72388's nightly_temperature lower than the average across all users, starting from 2022-06-10?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_72388's nightly_temperature lower than the average across all users, starting from 2022-06-10?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users increase, starting from 2022-06-17?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users increase, starting from 2022-06-17?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "3"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-05-21?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-05-21?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_79824's nightly_temperature higher than the average across all users, starting from 2022-06-16?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_79824's nightly_temperature higher than the average across all users, starting from 2022-06-16?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_27052's nightly_temperature higher than the average across all users, starting from 2022-05-30?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_27052's nightly_temperature higher than the average across all users, starting from 2022-05-30?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days was A4F_32988's nightly_temperature higher than the average across all users, starting from 2022-05-27?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days was A4F_32988's nightly_temperature higher than the average across all users, starting from 2022-05-27?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nHow many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-06-10?\n\nSchema (DDL):\n```sql\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(start_sleep) for day filtering and 7-day windows [S .. S+6].\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: How many consecutive days did the average nightly_temperature across all users decrease, starting from 2022-06-10?\nOutput requirement: return 1 value(s); types (ordered): {integer}", "Answer": "2"}
