{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-07, on the day when A4F_86472 had the highest cardio_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-07, on the day when A4F_86472 had the highest cardio_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-23, on the day when A4F_13504 had the highest sedentary_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-23, on the day when A4F_13504 had the highest sedentary_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-16, on the day when A4F_82994 had the highest lightly_active_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-16, on the day when A4F_82994 had the highest lightly_active_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-05, on the day when A4F_95200 had the highest moderately_active_minutes, which food subcategory did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-05, on the day when A4F_95200 had the highest moderately_active_minutes, which food subcategory did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Alcoholic Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-23, on the day when A4F_43794 had the highest moderately_active_minutes, which cooking_style did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-23, on the day when A4F_43794 had the highest moderately_active_minutes, which cooking_style did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-23, on the day when A4F_70068 had the highest lightly_active_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-23, on the day when A4F_70068 had the highest lightly_active_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-01, on the day when A4F_65724 had the highest very_active_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-01, on the day when A4F_65724 had the highest very_active_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Dairy and Plant-Based Drinks"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-20, on the day when A4F_94336 had the highest lightly_active_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-20, on the day when A4F_94336 had the highest lightly_active_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-10, on the day when A4F_70954 had the highest moderately_active_minutes, which food subcategory did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-10, on the day when A4F_70954 had the highest moderately_active_minutes, which food subcategory did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Alcoholic Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-16, on the day when A4F_10660 had the highest cardio_minutes, which cooking_style did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-16, on the day when A4F_10660 had the highest cardio_minutes, which cooking_style did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-05, on the day when A4F_35752 had the highest sedentary_minutes, which food subcategory did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-05, on the day when A4F_35752 had the highest sedentary_minutes, which food subcategory did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {else}", "Answer": "Infusions (Coffee and Others)"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-11, on the day when A4F_74742 had the highest moderately_active_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-11, on the day when A4F_74742 had the highest moderately_active_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-13, on the day when A4F_98453 had the highest sedentary_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-13, on the day when A4F_98453 had the highest sedentary_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fast Food"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-07, on the day when A4F_94120 had the highest very_active_minutes, which food subcategory did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-07, on the day when A4F_94120 had the highest very_active_minutes, which food subcategory did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {else}", "Answer": "Avocado/Fatty Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-02, on the day when A4F_79824 had the highest sedentary_minutes, which food subcategory did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-02, on the day when A4F_79824 had the highest sedentary_minutes, which food subcategory did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fish"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-20, on the day when A4F_49219 had the highest sedentary_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-20, on the day when A4F_49219 had the highest sedentary_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-14, on the day when A4F_41207 had the highest very_active_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-14, on the day when A4F_41207 had the highest very_active_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-04, on the day when A4F_79824 had the highest cardio_minutes, which cooking_style did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-04, on the day when A4F_79824 had the highest cardio_minutes, which cooking_style did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {else}", "Answer": "Preserved (Canned or Jarred)"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-14, on the day when A4F_22483 had the highest very_active_minutes, which cooking_style did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-14, on the day when A4F_22483 had the highest very_active_minutes, which cooking_style did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-19, on the day when A4F_49219 had the highest very_active_minutes, which cooking_style did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-19, on the day when A4F_49219 had the highest very_active_minutes, which cooking_style did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-06, on the day when A4F_22483 had the highest lightly_active_minutes, which cooking_style did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-06, on the day when A4F_22483 had the highest lightly_active_minutes, which cooking_style did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-20, on the day when A4F_65060 had the highest cardio_minutes, which food subcategory did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-20, on the day when A4F_65060 had the highest cardio_minutes, which food subcategory did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-15, on the day when A4F_70068 had the highest sedentary_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-15, on the day when A4F_70068 had the highest sedentary_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-25, on the day when A4F_91362 had the highest very_active_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-25, on the day when A4F_91362 had the highest very_active_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Protein Sources"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-20, on the day when A4F_67598 had the highest very_active_minutes, which food subcategory did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-20, on the day when A4F_67598 had the highest very_active_minutes, which food subcategory did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {else}", "Answer": "Infusions (Coffee and Others)"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-25, on the day when A4F_67598 had the highest sedentary_minutes, which food subcategory did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-25, on the day when A4F_67598 had the highest sedentary_minutes, which food subcategory did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {else}", "Answer": "Purées and Creams"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-29, on the day when A4F_65724 had the highest sedentary_minutes, which food subcategory did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-29, on the day when A4F_65724 had the highest sedentary_minutes, which food subcategory did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-27, on the day when A4F_33497 had the highest moderately_active_minutes, which food subcategory did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-27, on the day when A4F_33497 had the highest moderately_active_minutes, which food subcategory did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-11, on the day when A4F_98453 had the highest cardio_minutes, which cooking_style did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-11, on the day when A4F_98453 had the highest cardio_minutes, which cooking_style did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Grilled"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-10, on the day when A4F_40008 had the highest lightly_active_minutes, which food category did he/she consume most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-10, on the day when A4F_40008 had the highest lightly_active_minutes, which food category did he/she consume most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-06, how many more very_active_minutes did A4F_22643 record on the most active day compared to the least active day, and what was the most common food category on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-06, how many more very_active_minutes did A4F_22643 record on the most active day compared to the least active day, and what was the most common food category on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "29; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-03, how many more cardio_minutes did A4F_96181 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-03, how many more cardio_minutes did A4F_96181 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "6; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-21, how many more sedentary_minutes did A4F_76383 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-21, how many more sedentary_minutes did A4F_76383 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "295; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-24, how many more moderately_active_minutes did A4F_45863 record on the most active day compared to the least active day, and what was the most common food subcategory on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-24, how many more moderately_active_minutes did A4F_45863 record on the most active day compared to the least active day, and what was the most common food subcategory on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "45; Infusions (Coffee and Others)"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-25, how many more very_active_minutes did A4F_78358 record on the most active day compared to the least active day, and what was the most common food category on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-25, how many more very_active_minutes did A4F_78358 record on the most active day compared to the least active day, and what was the most common food category on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "62; Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-24, how many more very_active_minutes did A4F_45118 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-24, how many more very_active_minutes did A4F_45118 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "62; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-06, how many more very_active_minutes did A4F_98453 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-06, how many more very_active_minutes did A4F_98453 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "68; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-20, how many more lightly_active_minutes did A4F_17705 record on the most active day compared to the least active day, and what was the most common food category on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-20, how many more lightly_active_minutes did A4F_17705 record on the most active day compared to the least active day, and what was the most common food category on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "129; Protein Sources"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-19, how many more very_active_minutes did A4F_76292 record on the most active day compared to the least active day, and what was the most common food category on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-19, how many more very_active_minutes did A4F_76292 record on the most active day compared to the least active day, and what was the most common food category on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "68; Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-17, how many more cardio_minutes did A4F_94601 record on the most active day compared to the least active day, and what was the most common food category on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-17, how many more cardio_minutes did A4F_94601 record on the most active day compared to the least active day, and what was the most common food category on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "158; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-07, how many more very_active_minutes did A4F_86472 record on the most active day compared to the least active day, and what was the most common food category on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-07, how many more very_active_minutes did A4F_86472 record on the most active day compared to the least active day, and what was the most common food category on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "21; Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-23, how many more lightly_active_minutes did A4F_56355 record on the most active day compared to the least active day, and what was the most common food subcategory on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-23, how many more lightly_active_minutes did A4F_56355 record on the most active day compared to the least active day, and what was the most common food subcategory on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "124; Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-06, how many more sedentary_minutes did A4F_97618 record on the most active day compared to the least active day, and what was the most common food category on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-06, how many more sedentary_minutes did A4F_97618 record on the most active day compared to the least active day, and what was the most common food category on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "334; Dairy and Plant-Based Drinks"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-23, how many more very_active_minutes did A4F_78358 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-23, how many more very_active_minutes did A4F_78358 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "45; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-08, how many more sedentary_minutes did A4F_86472 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-08, how many more sedentary_minutes did A4F_86472 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "273; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-09, how many more very_active_minutes did A4F_74742 record on the most active day compared to the least active day, and what was the most common food category on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-09, how many more very_active_minutes did A4F_74742 record on the most active day compared to the least active day, and what was the most common food category on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "17; Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-26, how many more sedentary_minutes did A4F_93308 record on the most active day compared to the least active day, and what was the most common food subcategory on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-26, how many more sedentary_minutes did A4F_93308 record on the most active day compared to the least active day, and what was the most common food subcategory on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "182; Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-19, how many more lightly_active_minutes did A4F_76957 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-19, how many more lightly_active_minutes did A4F_76957 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "200; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-14, how many more sedentary_minutes did A4F_17419 record on the most active day compared to the least active day, and what was the most common food subcategory on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-14, how many more sedentary_minutes did A4F_17419 record on the most active day compared to the least active day, and what was the most common food subcategory on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "263; Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-26, how many more lightly_active_minutes did A4F_70068 record on the most active day compared to the least active day, and what was the most common food subcategory on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-26, how many more lightly_active_minutes did A4F_70068 record on the most active day compared to the least active day, and what was the most common food subcategory on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "202; Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-03, how many more very_active_minutes did A4F_29474 record on the most active day compared to the least active day, and what was the most common food category on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-03, how many more very_active_minutes did A4F_29474 record on the most active day compared to the least active day, and what was the most common food category on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "66; Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-17, how many more lightly_active_minutes did A4F_68106 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-17, how many more lightly_active_minutes did A4F_68106 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "280; Fermented"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-06, how many more very_active_minutes did A4F_60728 record on the most active day compared to the least active day, and what was the most common food category on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-06, how many more very_active_minutes did A4F_60728 record on the most active day compared to the least active day, and what was the most common food category on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "20; Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-26, how many more very_active_minutes did A4F_78358 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-26, how many more very_active_minutes did A4F_78358 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "62; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-06, how many more very_active_minutes did A4F_28771 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-06, how many more very_active_minutes did A4F_28771 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "3; Boiled or Steamed"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-27, how many more lightly_active_minutes did A4F_91362 record on the most active day compared to the least active day, and what was the most common food category on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-27, how many more lightly_active_minutes did A4F_91362 record on the most active day compared to the least active day, and what was the most common food category on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "137; Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-11, how many more lightly_active_minutes did A4F_70804 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-11, how many more lightly_active_minutes did A4F_70804 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "344; Fermented"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-07, how many more cardio_minutes did A4F_20573 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-07, how many more cardio_minutes did A4F_20573 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "22; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-10, how many more lightly_active_minutes did A4F_10660 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-10, how many more lightly_active_minutes did A4F_10660 record on the most active day compared to the least active day, and what was the most common cooking_style on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "312; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-21, how many more sedentary_minutes did A4F_45118 record on the most active day compared to the least active day, and what was the most common food category on that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-21, how many more sedentary_minutes did A4F_45118 record on the most active day compared to the least active day, and what was the most common food category on that day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "324; Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-19, on the day when A4F_49219 had the highest resting_heart_rate, which food subcategory was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-19, on the day when A4F_49219 had the highest resting_heart_rate, which food subcategory was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-05, on the day when A4F_97618 had the highest calorie, which food category was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-05, on the day when A4F_97618 had the highest calorie, which food category was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-12, on the day when A4F_50227 had the highest calorie, which food subcategory was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-12, on the day when A4F_50227 had the highest calorie, which food subcategory was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {else}", "Answer": "Infusions (Coffee and Others)"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-20, on the day when A4F_94601 had the highest calorie, which cooking_style was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-20, on the day when A4F_94601 had the highest calorie, which cooking_style was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-03, on the day when A4F_67757 had the highest calorie, which cooking_style was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-03, on the day when A4F_67757 had the highest calorie, which cooking_style was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-23, on the day when A4F_13368 had the highest distance, which cooking_style was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-23, on the day when A4F_13368 had the highest distance, which cooking_style was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fermented"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-23, on the day when A4F_73455 had the highest resting_heart_rate, which cooking_style was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-23, on the day when A4F_73455 had the highest resting_heart_rate, which cooking_style was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-23, on the day when A4F_93308 had the highest calorie, which cooking_style was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-23, on the day when A4F_93308 had the highest calorie, which cooking_style was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-02, on the day when A4F_91594 had the highest calorie, which food subcategory was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-02, on the day when A4F_91594 had the highest calorie, which food subcategory was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Biscuits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-13, on the day when A4F_56296 had the highest distance, which food subcategory was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-13, on the day when A4F_56296 had the highest distance, which food subcategory was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Alcoholic Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-31, on the day when A4F_96181 had the highest distance, which food subcategory was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-31, on the day when A4F_96181 had the highest distance, which food subcategory was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Vegetables and Greens"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-03, on the day when A4F_91594 had the highest calorie, which food category was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-03, on the day when A4F_91594 had the highest calorie, which food category was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-03, on the day when A4F_71665 had the highest calorie, which cooking_style was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-03, on the day when A4F_71665 had the highest calorie, which cooking_style was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Boiled or Steamed"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-27, on the day when A4F_91362 had the highest distance, which food category was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-27, on the day when A4F_91362 had the highest distance, which food category was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-21, on the day when A4F_43794 had the highest resting_heart_rate, which food subcategory was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-21, on the day when A4F_43794 had the highest resting_heart_rate, which food subcategory was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-23, on the day when A4F_76068 had the highest steps, which food subcategory was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-23, on the day when A4F_76068 had the highest steps, which food subcategory was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Vegetables and Greens"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-20, on the day when A4F_68106 had the highest resting_heart_rate, which food category was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-20, on the day when A4F_68106 had the highest resting_heart_rate, which food category was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-21, on the day when A4F_77391 had the highest calorie, which food subcategory was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-21, on the day when A4F_77391 had the highest calorie, which food subcategory was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Processed Dairy"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-14, on the day when A4F_39976 had the highest calorie, which food category was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-14, on the day when A4F_39976 had the highest calorie, which food category was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-18, on the day when A4F_76292 had the highest distance, which cooking_style was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-18, on the day when A4F_76292 had the highest distance, which cooking_style was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-23, on the day when A4F_49219 had the highest steps, which food subcategory was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-23, on the day when A4F_49219 had the highest steps, which food subcategory was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Cured Meats and Cold Cuts"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-22, on the day when A4F_28689 had the highest calorie, which food category was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-22, on the day when A4F_28689 had the highest calorie, which food category was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-28, on the day when A4F_73455 had the highest calorie, which food category was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-28, on the day when A4F_73455 had the highest calorie, which food category was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-10, on the day when A4F_74742 had the highest resting_heart_rate, which food subcategory was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-10, on the day when A4F_74742 had the highest resting_heart_rate, which food subcategory was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-19, on the day when A4F_70068 had the highest steps, which food category was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-19, on the day when A4F_70068 had the highest steps, which food category was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-17, on the day when A4F_94601 had the highest distance, which food category was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-17, on the day when A4F_94601 had the highest distance, which food category was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-13, on the day when A4F_18098 had the highest steps, which cooking_style was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-13, on the day when A4F_18098 had the highest steps, which cooking_style was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Boiled or Steamed"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-21, on the day when A4F_84740 had the highest steps, which food category was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-21, on the day when A4F_84740 had the highest steps, which food category was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-17, on the day when A4F_74742 had the highest resting_heart_rate, which food subcategory was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-17, on the day when A4F_74742 had the highest resting_heart_rate, which food subcategory was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Cured Meats and Cold Cuts"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-07, on the day when A4F_35752 had the highest steps, which food category was consumed most frequently?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-07, on the day when A4F_35752 had the highest steps, which food category was consumed most frequently?\nOutput requirement: return 1 value(s); types (ordered): {word}", "Answer": "Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-29, how many more steps did A4F_94336 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-29, how many more steps did A4F_94336 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-5555; Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-19, how many more calorie did A4F_89897 record compared to the previous day, and which cooking_style was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-19, how many more calorie did A4F_89897 record compared to the previous day, and which cooking_style was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "-343.94; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-30, how many more calorie did A4F_28689 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-30, how many more calorie did A4F_28689 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "9.06; Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-29, how many more steps did A4F_13368 record compared to the previous day, and which cooking_style was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-29, how many more steps did A4F_13368 record compared to the previous day, and which cooking_style was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-15783; Oven-Baked"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-21, how many more resting_heart_rate did A4F_76383 record compared to the previous day, and which food category was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-21, how many more resting_heart_rate did A4F_76383 record compared to the previous day, and which food category was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "1.08; Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-20, how many more resting_heart_rate did A4F_33497 record compared to the previous day, and which cooking_style was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-20, how many more resting_heart_rate did A4F_33497 record compared to the previous day, and which cooking_style was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "-0.6; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-09, how many more distance did A4F_22643 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-09, how many more distance did A4F_22643 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-343360; Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-25, how many more resting_heart_rate did A4F_91516 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-25, how many more resting_heart_rate did A4F_91516 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "-2.55; Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-08, how many more distance did A4F_10660 record compared to the previous day, and which cooking_style was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-08, how many more distance did A4F_10660 record compared to the previous day, and which cooking_style was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "802510; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-08, how many more calorie did A4F_60728 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-08, how many more calorie did A4F_60728 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "266; Milk and Plant-Based Drinks"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-19, how many more steps did A4F_65695 record compared to the previous day, and which cooking_style was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-19, how many more steps did A4F_65695 record compared to the previous day, and which cooking_style was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-3226; Boiled or Steamed"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-24, how many more calorie did A4F_69129 record compared to the previous day, and which food category was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-24, how many more calorie did A4F_69129 record compared to the previous day, and which food category was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "-1801.88; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-06, how many more steps did A4F_91594 record compared to the previous day, and which cooking_style was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-06, how many more steps did A4F_91594 record compared to the previous day, and which cooking_style was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-1651; Oven-Baked"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-28, how many more resting_heart_rate did A4F_84534 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-28, how many more resting_heart_rate did A4F_84534 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "0.08; Vegetables and Greens"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-30, how many more distance did A4F_65695 record compared to the previous day, and which cooking_style was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-30, how many more distance did A4F_65695 record compared to the previous day, and which cooking_style was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-337550; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-26, how many more calorie did A4F_65060 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-26, how many more calorie did A4F_65060 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "-2500.13; Cured Meats and Cold Cuts"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-28, how many more steps did A4F_68106 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-28, how many more steps did A4F_68106 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "2339; Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-23, how many more calorie did A4F_32988 record compared to the previous day, and which cooking_style was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-23, how many more calorie did A4F_32988 record compared to the previous day, and which cooking_style was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "-603.29; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-20, how many more distance did A4F_42312 record compared to the previous day, and which food category was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-20, how many more distance did A4F_42312 record compared to the previous day, and which food category was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "55110; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-19, how many more calorie did A4F_49219 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-19, how many more calorie did A4F_49219 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "0.01; Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-16, how many more resting_heart_rate did A4F_56296 record compared to the previous day, and which cooking_style was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-16, how many more resting_heart_rate did A4F_56296 record compared to the previous day, and which cooking_style was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "0.81; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-14, how many more calorie did A4F_50227 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-14, how many more calorie did A4F_50227 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "350.7; Infusions (Coffee and Others)"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-23, how many more resting_heart_rate did A4F_65724 record compared to the previous day, and which cooking_style was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-23, how many more resting_heart_rate did A4F_65724 record compared to the previous day, and which cooking_style was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "0.71; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-15, how many more calorie did A4F_34415 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-15, how many more calorie did A4F_34415 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "668.75; Yogurt and Fresh Cheese"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-20, how many more calorie did A4F_31033 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-20, how many more calorie did A4F_31033 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "-38.83; Water"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-08, how many more resting_heart_rate did A4F_24211 record compared to the previous day, and which food subcategory was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-08, how many more resting_heart_rate did A4F_24211 record compared to the previous day, and which food subcategory was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "1.61; Milk and Plant-Based Drinks"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-22, how many more steps did A4F_65060 record compared to the previous day, and which cooking_style was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-22, how many more steps did A4F_65060 record compared to the previous day, and which cooking_style was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-2382; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-19, how many more resting_heart_rate did A4F_50227 record compared to the previous day, and which food category was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-19, how many more resting_heart_rate did A4F_50227 record compared to the previous day, and which food category was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "-0.58; Dairy and Plant-Based Drinks"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-10, how many more steps did A4F_70804 record compared to the previous day, and which cooking_style was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-10, how many more steps did A4F_70804 record compared to the previous day, and which cooking_style was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-2886; Boiled or Steamed"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-19, how many more resting_heart_rate did A4F_49219 record compared to the previous day, and which food category was most common on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_daily_summary` (\n  `id`                              VARCHAR(20) NOT NULL,\n  `ts`                              DATETIME    NOT NULL,\n  `resting_heart_rate`              DECIMAL(5,2),\n  `altitude_m`                      SMALLINT,\n  `calories_kcal`                   DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  `distance_m`                      DECIMAL(10,2),\n  `minutes_below_default_zone_1`    SMALLINT UNSIGNED,\n  `minutes_in_default_zone_1`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_2`       SMALLINT UNSIGNED,\n  `minutes_in_default_zone_3`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-19, how many more resting_heart_rate did A4F_49219 record compared to the previous day, and which food category was most common on this day?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {word}", "Answer": "2.04; Traditional Mediterranean Dishes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-21, during which activity session did A4F_42312 record the highest active_duration, and which food subcategory was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-21, during which activity session did A4F_42312 record the highest active_duration, and which food subcategory was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-05-23 20:10:38; Vegetables and Greens"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-12, during which activity session did A4F_34415 record the highest average_heart_rate, and which food subcategory was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-12, during which activity session did A4F_34415 record the highest average_heart_rate, and which food subcategory was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-06-12 08:55:48; Processed Dairy"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-24, during which activity session did A4F_56355 record the highest calories, and which cooking_style was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-24, during which activity session did A4F_56355 record the highest calories, and which cooking_style was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-05-25 18:34:28; Fermented"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-18, during which activity session did A4F_84740 record the highest active_duration, and which food subcategory was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-18, during which activity session did A4F_84740 record the highest active_duration, and which food subcategory was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Bike on 2022-05-20 18:43:20; Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-04, during which activity session did A4F_40008 record the highest active_duration, and which food subcategory was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-04, during which activity session did A4F_40008 record the highest active_duration, and which food subcategory was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-06-09 22:58:15; Fish"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-03, during which activity session did A4F_95200 record the highest calories, and which cooking_style was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-03, during which activity session did A4F_95200 record the highest calories, and which cooking_style was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-06-08 20:24:14; Boiled or Steamed"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-19, during which activity session did A4F_76068 record the highest average_heart_rate, and which food category was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-19, during which activity session did A4F_76068 record the highest average_heart_rate, and which food category was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-05-19 08:55:47; Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-20, during which activity session did A4F_53145 record the highest average_heart_rate, and which food category was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-20, during which activity session did A4F_53145 record the highest average_heart_rate, and which food category was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Workout on 2022-05-22 19:54:48; Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-21, during which activity session did A4F_69129 record the highest average_heart_rate, and which food category was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-21, during which activity session did A4F_69129 record the highest average_heart_rate, and which food category was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-05-22 18:43:53; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-09, during which activity session did A4F_79824 record the highest active_duration, and which cooking_style was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-09, during which activity session did A4F_79824 record the highest active_duration, and which cooking_style was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "Walk on 2022-06-09 19:56:11; Preserved (Canned or Jarred)"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-08, during which activity session did A4F_25413 record the highest average_heart_rate, and which food category was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-08, during which activity session did A4F_25413 record the highest average_heart_rate, and which food category was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-06-12 16:44:08; Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-03, during which activity session did A4F_96181 record the highest average_heart_rate, and which food category was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-03, during which activity session did A4F_96181 record the highest average_heart_rate, and which food category was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Bike on 2022-06-07 21:28:54; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-11, during which activity session did A4F_94120 record the highest average_heart_rate, and which food category was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-11, during which activity session did A4F_94120 record the highest average_heart_rate, and which food category was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-06-13 10:07:16; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-29, during which activity session did A4F_77391 record the highest active_duration, and which food category was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-29, during which activity session did A4F_77391 record the highest active_duration, and which food category was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Swim on 2022-06-01 08:44:44; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-24, during which activity session did A4F_94601 record the highest active_duration, and which cooking_style was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-24, during which activity session did A4F_94601 record the highest active_duration, and which cooking_style was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-05-24 08:56:15; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-09, during which activity session did A4F_20573 record the highest calories, and which cooking_style was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-09, during which activity session did A4F_20573 record the highest calories, and which cooking_style was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Bike on 2022-06-12 10:30:57; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-19, during which activity session did A4F_94601 record the highest calories, and which food subcategory was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-19, during which activity session did A4F_94601 record the highest calories, and which food subcategory was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "Walk on 2022-05-24 08:56:15; Infusions (Coffee and Others)"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-13, during which activity session did A4F_99000 record the highest calories, and which cooking_style was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-13, during which activity session did A4F_99000 record the highest calories, and which cooking_style was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Workout on 2022-06-17 21:04:58; Boiled or Steamed"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-17, during which activity session did A4F_97618 record the highest average_heart_rate, and which cooking_style was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-17, during which activity session did A4F_97618 record the highest average_heart_rate, and which cooking_style was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-06-19 21:44:43; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-14, during which activity session did A4F_48857 record the highest active_duration, and which cooking_style was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-14, during which activity session did A4F_48857 record the highest active_duration, and which cooking_style was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Run on 2022-06-19 11:27:29; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-13, during which activity session did A4F_60429 record the highest calories, and which food subcategory was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-13, during which activity session did A4F_60429 record the highest calories, and which food subcategory was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Workout on 2022-06-14 18:29:51; Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-14, during which activity session did A4F_98040 record the highest calories, and which cooking_style was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-14, during which activity session did A4F_98040 record the highest calories, and which cooking_style was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-06-18 19:11:09; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-13, during which activity session did A4F_79824 record the highest calories, and which cooking_style was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-13, during which activity session did A4F_79824 record the highest calories, and which cooking_style was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-06-15 17:39:54; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-27, during which activity session did A4F_94336 record the highest calories, and which food subcategory was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-27, during which activity session did A4F_94336 record the highest calories, and which food subcategory was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Run on 2022-05-28 18:38:12; Processed Dairy"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-26, during which activity session did A4F_45118 record the highest average_heart_rate, and which food category was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-26, during which activity session did A4F_45118 record the highest average_heart_rate, and which food category was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-05-26 21:31:38; Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-26, during which activity session did A4F_56297 record the highest calories, and which food subcategory was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-26, during which activity session did A4F_56297 record the highest calories, and which food subcategory was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-05-30 20:36:52; Cheeses"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-22, during which activity session did A4F_70068 record the highest average_heart_rate, and which food category was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-22, during which activity session did A4F_70068 record the highest average_heart_rate, and which food category was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-05-27 16:25:15; Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-05-26, during which activity session did A4F_76068 record the highest active_duration, and which food category was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-05-26, during which activity session did A4F_76068 record the highest active_duration, and which food category was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-05-30 11:20:47; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-14, during which activity session did A4F_35752 record the highest average_heart_rate, and which food category was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-14, during which activity session did A4F_35752 record the highest average_heart_rate, and which food category was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-06-15 20:53:45; Protein Sources"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nWithin one week starting from 2022-06-16, during which activity session did A4F_35752 record the highest active_duration, and which cooking_style was most frequent that day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: Within one week starting from 2022-06-16, during which activity session did A4F_35752 record the highest active_duration, and which cooking_style was most frequent that day?\nOutput requirement: return 2 value(s); types (ordered): {else}; {word}", "Answer": "Walk on 2022-06-16 00:10:52; Boiled or Steamed"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-30, how many more average_heart_rate did A4F_45863 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-30, how many more average_heart_rate did A4F_45863 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-69; Poultry"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-06, how many more average_heart_rate did A4F_71665 take during Walk compared to the previous day, and what was the most common food category on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-06, how many more average_heart_rate did A4F_71665 take during Walk compared to the previous day, and what was the most common food category on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-82; Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-26, how many more average_heart_rate did A4F_91516 take during Walk compared to the previous day, and what was the most common food category on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-26, how many more average_heart_rate did A4F_91516 take during Walk compared to the previous day, and what was the most common food category on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-2; Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-19, how many more calories did A4F_34415 take during Walk compared to the previous day, and what was the most common food category on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-19, how many more calories did A4F_34415 take during Walk compared to the previous day, and what was the most common food category on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "109; Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-13, how many more average_heart_rate did A4F_79824 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-13, how many more average_heart_rate did A4F_79824 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "99; Processed Dairy"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-23, how many more calories did A4F_85240 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-23, how many more calories did A4F_85240 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "496; Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-26, how many more active_duration did A4F_27052 take during Yoga compared to the previous day, and what was the most common cooking_style on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-26, how many more active_duration did A4F_27052 take during Yoga compared to the previous day, and what was the most common cooking_style on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "62; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-10, how many more active_duration did A4F_72388 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-10, how many more active_duration did A4F_72388 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "13; Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-29, how many more calories did A4F_76068 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-29, how many more calories did A4F_76068 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "134; Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-19, how many more average_heart_rate did A4F_17705 take during Walk compared to the previous day, and what was the most common food category on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-19, how many more average_heart_rate did A4F_17705 take during Walk compared to the previous day, and what was the most common food category on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "111; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-09, how many more active_duration did A4F_24211 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-09, how many more active_duration did A4F_24211 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "21; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-23, how many more active_duration did A4F_56718 take during Swim compared to the previous day, and what was the most common food category on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-23, how many more active_duration did A4F_56718 take during Swim compared to the previous day, and what was the most common food category on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "41; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-12, how many more active_duration did A4F_10141 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-12, how many more active_duration did A4F_10141 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "36; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-24, how many more active_duration did A4F_65724 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-24, how many more active_duration did A4F_65724 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "26; Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-05, how many more active_duration did A4F_94120 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-05, how many more active_duration did A4F_94120 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "56; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-25, how many more active_duration did A4F_77391 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-25, how many more active_duration did A4F_77391 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "30; Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-26, how many more active_duration did A4F_76292 take during Walk compared to the previous day, and what was the most common food category on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-26, how many more active_duration did A4F_76292 take during Walk compared to the previous day, and what was the most common food category on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-8; Beverages"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-12, how many more active_duration did A4F_41207 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-12, how many more active_duration did A4F_41207 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "40; Other Meats"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-24, how many more calories did A4F_91516 take during Swim compared to the previous day, and what was the most common food subcategory on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-24, how many more calories did A4F_91516 take during Swim compared to the previous day, and what was the most common food subcategory on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "107; Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-20, how many more calories did A4F_98453 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-20, how many more calories did A4F_98453 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "132; Boiled or Steamed"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-03, how many more active_duration did A4F_60728 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-03, how many more active_duration did A4F_60728 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "20; Bread"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-06-01, how many more calories did A4F_45863 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-06-01, how many more calories did A4F_45863 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "270; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-26, how many more calories did A4F_45863 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-26, how many more calories did A4F_45863 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {else}", "Answer": "-179; Infusions (Coffee and Others)"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-26, how many more calories did A4F_28689 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-26, how many more calories did A4F_28689 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "219; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-23, how many more active_duration did A4F_76383 take during Swim compared to the previous day, and what was the most common food category on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-23, how many more active_duration did A4F_76383 take during Swim compared to the previous day, and what was the most common food category on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "18; Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-29, how many more active_duration did A4F_76292 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-29, how many more active_duration did A4F_76292 take during Walk compared to the previous day, and what was the most common cooking_style on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "32; Fresh"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-25, how many more average_heart_rate did A4F_84534 take during Bike compared to the previous day, and what was the most common food category on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-25, how many more average_heart_rate did A4F_84534 take during Bike compared to the previous day, and what was the most common food category on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "201; Vegetables and Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-30, how many more calories did A4F_76068 take during Walk compared to the previous day, and what was the most common food category on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-30, how many more calories did A4F_76068 take during Walk compared to the previous day, and what was the most common food category on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "795; Cereals and Legumes"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-21, how many more active_duration did A4F_28689 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-21, how many more active_duration did A4F_28689 take during Walk compared to the previous day, and what was the most common food subcategory on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "-116; Fruits"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute the data you need. Use DATE(ts) for date filtering if needed. Output SQL only.\n\nQuestion:\nOn 2022-05-19, how many more calories did A4F_17705 take during Walk compared to the previous day, and what was the most common food category on this day?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_reports` (\n  `session_id`                      BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`                              VARCHAR(20) NOT NULL,\n  `record_ts`                       DATETIME    NOT NULL,\n  `activity_name`                   VARCHAR(50),\n  `average_heart_rate`              DECIMAL(5,2),\n  `duration`                        INT UNSIGNED,\n  `active_duration`                 INT UNSIGNED,\n  `calories`                        DECIMAL(8,2),\n  `steps`                           INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `food_meal_labels` (\n  `id`            VARCHAR(20)   NOT NULL,\n  `ts`            DATETIME      NOT NULL,\n  `image_id`      VARCHAR(100)  NOT NULL,\n  `category`      VARCHAR(128)  NOT NULL,\n  `subcategory`   VARCHAR(128)  NOT NULL,\n  `cooking_style` VARCHAR(128)  NOT NULL,\n  PRIMARY KEY (id, ts, image_id, category, subcategory, cooking_style),\n  KEY idx_id_ts (id, ts)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;\n-- IMPORTANT aggregation note:\n--   * Deduplicate within a meal: treat duplicates within the same (id, ts, label) as one.\n--   * For per-day/week \"times\", count DISTINCT meals (ts) that include the label (COUNT(DISTINCT CONCAT(id,'#',ts)) with predicate).\n-- Use DATE(ts) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question. Answer the question based on the SQL result, do not include explanations. \nQuestion: On 2022-05-19, how many more calories did A4F_17705 take during Walk compared to the previous day, and what was the most common food category on this day?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {word}", "Answer": "161; Cereals and Legumes"}
