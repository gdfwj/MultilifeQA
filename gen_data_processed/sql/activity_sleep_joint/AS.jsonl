{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the total steps and total minutes_asleep of A4F_56355 within one week, starting from 2022-05-20?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the total steps and total minutes_asleep of A4F_56355 within one week, starting from 2022-05-20?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "76498; 2314"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the total steps and total minutes_asleep of A4F_45863 within one week, starting from 2022-05-20?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the total steps and total minutes_asleep of A4F_45863 within one week, starting from 2022-05-20?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "121130; 2622"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the total steps and total minutes_asleep of A4F_91362 within one week, starting from 2022-05-28?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the total steps and total minutes_asleep of A4F_91362 within one week, starting from 2022-05-28?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "46142; 2847"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the total steps and total minutes_asleep of A4F_10355 within one week, starting from 2022-06-06?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the total steps and total minutes_asleep of A4F_10355 within one week, starting from 2022-06-06?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "63001; 2883"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the total steps and total minutes_asleep of A4F_92332 within one week, starting from 2022-06-05?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the total steps and total minutes_asleep of A4F_92332 within one week, starting from 2022-06-05?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {integer}", "Answer": "48787; 2990"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average calories burned and average minutes_in_bed of A4F_65695 within one week, starting from 2022-05-21?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average calories burned and average minutes_in_bed of A4F_65695 within one week, starting from 2022-05-21?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "3094.88; 529.43"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average calories burned and average minutes_in_bed of A4F_29474 within one week, starting from 2022-06-03?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average calories burned and average minutes_in_bed of A4F_29474 within one week, starting from 2022-06-03?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "3313.91; 443.57"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average calories burned and average minutes_in_bed of A4F_10141 within one week, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average calories burned and average minutes_in_bed of A4F_10141 within one week, starting from 2022-06-09?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "2916.77; 424.86"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average calories burned and average minutes_in_bed of A4F_69129 within one week, starting from 2022-05-17?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average calories burned and average minutes_in_bed of A4F_69129 within one week, starting from 2022-05-17?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "3145.52; 402.14"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average calories burned and average minutes_in_bed of A4F_50227 within one week, starting from 2022-06-13?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average calories burned and average minutes_in_bed of A4F_50227 within one week, starting from 2022-06-13?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "2741.25; 405.57"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_27052's total minutes_in_deep_sleep was achieved in the same week when his/her total very_active_minutes was above average, starting from 2022-05-23?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_27052's total minutes_in_deep_sleep was achieved in the same week when his/her total very_active_minutes was above average, starting from 2022-05-23?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "15.72"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_68106's total minutes_in_deep_sleep was achieved in the same week when his/her total very_active_minutes was above average, starting from 2022-05-24?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_68106's total minutes_in_deep_sleep was achieved in the same week when his/her total very_active_minutes was above average, starting from 2022-05-24?\nOutput requirement: return 1 value(s); types (ordered): {else}", "Answer": "47.2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_84740's total minutes_in_deep_sleep was achieved in the same week when his/her total very_active_minutes was above average, starting from 2022-05-17?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_84740's total minutes_in_deep_sleep was achieved in the same week when his/her total very_active_minutes was above average, starting from 2022-05-17?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "30.67"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_84534's total minutes_in_deep_sleep was achieved in the same week when his/her total very_active_minutes was above average, starting from 2022-05-28?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_84534's total minutes_in_deep_sleep was achieved in the same week when his/her total very_active_minutes was above average, starting from 2022-05-28?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "51.74"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_95200's total minutes_in_deep_sleep was achieved in the same week when his/her total very_active_minutes was above average, starting from 2022-06-04?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_95200's total minutes_in_deep_sleep was achieved in the same week when his/her total very_active_minutes was above average, starting from 2022-06-04?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "41.65"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average resting_heart_rate during the day and the average nrem_hr during sleep of A4F_94336 within one week, starting from 2022-05-30?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average resting_heart_rate during the day and the average nrem_hr during sleep of A4F_94336 within one week, starting from 2022-05-30?\nOutput requirement: return 2 value(s); types (ordered): {else}; {else}", "Answer": "44.6; 18.1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average resting_heart_rate during the day and the average nrem_hr during sleep of A4F_31649 within one week, starting from 2022-06-13?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average resting_heart_rate during the day and the average nrem_hr during sleep of A4F_31649 within one week, starting from 2022-06-13?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "63.81; 62.33"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average resting_heart_rate during the day and the average nrem_hr during sleep of A4F_68106 within one week, starting from 2022-05-20?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average resting_heart_rate during the day and the average nrem_hr during sleep of A4F_68106 within one week, starting from 2022-05-20?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "57.26; 53.38"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average resting_heart_rate during the day and the average nrem_hr during sleep of A4F_24211 within one week, starting from 2022-06-02?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average resting_heart_rate during the day and the average nrem_hr during sleep of A4F_24211 within one week, starting from 2022-06-02?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "54.58; 46.52"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average resting_heart_rate during the day and the average nrem_hr during sleep of A4F_29474 within one week, starting from 2022-06-14?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average resting_heart_rate during the day and the average nrem_hr during sleep of A4F_29474 within one week, starting from 2022-06-14?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "57.94; 57.59"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average cardio_minutes and the average rmssd during sleep of A4F_56718 within one week, starting from 2022-05-20?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average cardio_minutes and the average rmssd during sleep of A4F_56718 within one week, starting from 2022-05-20?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "50.29; 27.26"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average cardio_minutes and the average rmssd during sleep of A4F_10660 within one week, starting from 2022-06-12?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average cardio_minutes and the average rmssd during sleep of A4F_10660 within one week, starting from 2022-06-12?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "47.14; 37.29"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average cardio_minutes and the average rmssd during sleep of A4F_52749 within one week, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average cardio_minutes and the average rmssd during sleep of A4F_52749 within one week, starting from 2022-06-11?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {else}", "Answer": "0.29; 27.1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average cardio_minutes and the average rmssd during sleep of A4F_89897 within one week, starting from 2022-05-25?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average cardio_minutes and the average rmssd during sleep of A4F_89897 within one week, starting from 2022-05-25?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "10.57; 53.42"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average cardio_minutes and the average rmssd during sleep of A4F_10660 within one week, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average cardio_minutes and the average rmssd during sleep of A4F_10660 within one week, starting from 2022-06-11?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "54.86; 36.39"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_31649's total entropy values corresponded to nights after days with above-average steps in a given week, starting from 2022-06-13?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_31649's total entropy values corresponded to nights after days with above-average steps in a given week, starting from 2022-06-13?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "59.08"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_97386's total entropy values corresponded to nights after days with above-average steps in a given week, starting from 2022-06-07?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_97386's total entropy values corresponded to nights after days with above-average steps in a given week, starting from 2022-06-07?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "42.11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_20573's total entropy values corresponded to nights after days with above-average steps in a given week, starting from 2022-06-02?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_20573's total entropy values corresponded to nights after days with above-average steps in a given week, starting from 2022-06-02?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "45.91"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_22119's total entropy values corresponded to nights after days with above-average steps in a given week, starting from 2022-05-22?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_22119's total entropy values corresponded to nights after days with above-average steps in a given week, starting from 2022-05-22?\nOutput requirement: return 1 value(s); types (ordered): {else}", "Answer": "40.6"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_34415's total entropy values corresponded to nights after days with above-average steps in a given week, starting from 2022-06-08?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_34415's total entropy values corresponded to nights after days with above-average steps in a given week, starting from 2022-06-08?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "71.53"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average calories burned and the average sleep_average_oxygen_saturation of A4F_56355 within one week, starting from 2022-05-23?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average calories burned and the average sleep_average_oxygen_saturation of A4F_56355 within one week, starting from 2022-05-23?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "186.29; 80.43"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average calories burned and the average sleep_average_oxygen_saturation of A4F_67757 within one week, starting from 2022-06-03?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average calories burned and the average sleep_average_oxygen_saturation of A4F_67757 within one week, starting from 2022-06-03?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "790; 93.54"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average calories burned and the average sleep_average_oxygen_saturation of A4F_60728 within one week, starting from 2022-06-02?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average calories burned and the average sleep_average_oxygen_saturation of A4F_60728 within one week, starting from 2022-06-02?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "42.71; 81.11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average calories burned and the average sleep_average_oxygen_saturation of A4F_70068 within one week, starting from 2022-05-21?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average calories burned and the average sleep_average_oxygen_saturation of A4F_70068 within one week, starting from 2022-05-21?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {else}", "Answer": "1871.71; 82.6"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average calories burned and the average sleep_average_oxygen_saturation of A4F_67757 within one week, starting from 2022-06-06?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average calories burned and the average sleep_average_oxygen_saturation of A4F_67757 within one week, starting from 2022-06-06?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "510.29; 93.51"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average steps and the average lower_bound_oxygen_saturation of A4F_85240 within one week, starting from 2022-05-18?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average steps and the average lower_bound_oxygen_saturation of A4F_85240 within one week, starting from 2022-05-18?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "9663.57; 66.49"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average steps and the average lower_bound_oxygen_saturation of A4F_17419 within one week, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average steps and the average lower_bound_oxygen_saturation of A4F_17419 within one week, starting from 2022-06-09?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "13649.43; 65.96"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average steps and the average lower_bound_oxygen_saturation of A4F_28689 within one week, starting from 2022-05-19?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average steps and the average lower_bound_oxygen_saturation of A4F_28689 within one week, starting from 2022-05-19?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "14433.14; 39.51"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average steps and the average lower_bound_oxygen_saturation of A4F_45118 within one week, starting from 2022-05-22?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average steps and the average lower_bound_oxygen_saturation of A4F_45118 within one week, starting from 2022-05-22?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "13186.86; 93.79"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average steps and the average lower_bound_oxygen_saturation of A4F_56279 within one week, starting from 2022-05-19?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average steps and the average lower_bound_oxygen_saturation of A4F_56279 within one week, starting from 2022-05-19?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "12252; 94.76"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_67757's upper_bound_oxygen_saturation values occurred on nights following days when peak_minutes were above average, starting from 2022-06-12?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_67757's upper_bound_oxygen_saturation values occurred on nights following days when peak_minutes were above average, starting from 2022-06-12?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "14.22"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_99000's upper_bound_oxygen_saturation values occurred on nights following days when peak_minutes were above average, starting from 2022-06-12?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_99000's upper_bound_oxygen_saturation values occurred on nights following days when peak_minutes were above average, starting from 2022-06-12?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "14.17"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_45863's upper_bound_oxygen_saturation values occurred on nights following days when peak_minutes were above average, starting from 2022-05-22?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_45863's upper_bound_oxygen_saturation values occurred on nights following days when peak_minutes were above average, starting from 2022-05-22?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "14.49"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_73455's upper_bound_oxygen_saturation values occurred on nights following days when peak_minutes were above average, starting from 2022-05-31?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_73455's upper_bound_oxygen_saturation values occurred on nights following days when peak_minutes were above average, starting from 2022-05-31?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "14.11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_70068's upper_bound_oxygen_saturation values occurred on nights following days when peak_minutes were above average, starting from 2022-05-17?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_70068's upper_bound_oxygen_saturation values occurred on nights following days when peak_minutes were above average, starting from 2022-05-17?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "32.94"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average very_active_minutes and the average full_sleep_breathing_rate of A4F_97618 within one week, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average very_active_minutes and the average full_sleep_breathing_rate of A4F_97618 within one week, starting from 2022-06-09?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "33; 20.91"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average very_active_minutes and the average full_sleep_breathing_rate of A4F_84740 within one week, starting from 2022-05-17?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average very_active_minutes and the average full_sleep_breathing_rate of A4F_84740 within one week, starting from 2022-05-17?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "5.43; 16.11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average very_active_minutes and the average full_sleep_breathing_rate of A4F_29474 within one week, starting from 2022-06-08?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average very_active_minutes and the average full_sleep_breathing_rate of A4F_29474 within one week, starting from 2022-06-08?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "27.86; 13.91"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average very_active_minutes and the average full_sleep_breathing_rate of A4F_10709 within one week, starting from 2022-05-31?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average very_active_minutes and the average full_sleep_breathing_rate of A4F_10709 within one week, starting from 2022-05-31?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {else}", "Answer": "13.57; 12.4"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average very_active_minutes and the average full_sleep_breathing_rate of A4F_68106 within one week, starting from 2022-05-21?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average very_active_minutes and the average full_sleep_breathing_rate of A4F_68106 within one week, starting from 2022-05-21?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "31.86; 11.03"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average steps and the average deep_sleep_breathing_rate of A4F_68106 within one week, starting from 2022-05-19?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average steps and the average deep_sleep_breathing_rate of A4F_68106 within one week, starting from 2022-05-19?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "11353.43; 11.11"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average steps and the average deep_sleep_breathing_rate of A4F_91594 within one week, starting from 2022-06-13?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average steps and the average deep_sleep_breathing_rate of A4F_91594 within one week, starting from 2022-06-13?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "12372.71; 11.63"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average steps and the average deep_sleep_breathing_rate of A4F_34415 within one week, starting from 2022-06-08?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average steps and the average deep_sleep_breathing_rate of A4F_34415 within one week, starting from 2022-06-08?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "9244.43; 11.66"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average steps and the average deep_sleep_breathing_rate of A4F_31033 within one week, starting from 2022-06-16?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average steps and the average deep_sleep_breathing_rate of A4F_31033 within one week, starting from 2022-06-16?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "10369; 13.57"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average steps and the average deep_sleep_breathing_rate of A4F_56279 within one week, starting from 2022-05-30?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average steps and the average deep_sleep_breathing_rate of A4F_56279 within one week, starting from 2022-05-30?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {else}", "Answer": "9847.71; 9.2"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWithin one week, what percentage of A4F_31033's light_sleep_breathing_rate values were higher on nights after days with above-average calories burned, starting from 2022-06-16?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: Within one week, what percentage of A4F_31033's light_sleep_breathing_rate values were higher on nights after days with above-average calories burned, starting from 2022-06-16?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "43.28"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWithin one week, what percentage of A4F_25413's light_sleep_breathing_rate values were higher on nights after days with above-average calories burned, starting from 2022-06-06?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: Within one week, what percentage of A4F_25413's light_sleep_breathing_rate values were higher on nights after days with above-average calories burned, starting from 2022-06-06?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "42.96"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWithin one week, what percentage of A4F_91516's light_sleep_breathing_rate values were higher on nights after days with above-average calories burned, starting from 2022-05-20?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: Within one week, what percentage of A4F_91516's light_sleep_breathing_rate values were higher on nights after days with above-average calories burned, starting from 2022-05-20?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "33.01"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWithin one week, what percentage of A4F_29474's light_sleep_breathing_rate values were higher on nights after days with above-average calories burned, starting from 2022-06-08?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: Within one week, what percentage of A4F_29474's light_sleep_breathing_rate values were higher on nights after days with above-average calories burned, starting from 2022-06-08?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "41.04"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWithin one week, what percentage of A4F_91594's light_sleep_breathing_rate values were higher on nights after days with above-average calories burned, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: Within one week, what percentage of A4F_91594's light_sleep_breathing_rate values were higher on nights after days with above-average calories burned, starting from 2022-06-09?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "60.36"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average sedentary_minutes and the average nightly_temperature of A4F_91594 within one week, starting from 2022-06-02?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average sedentary_minutes and the average nightly_temperature of A4F_91594 within one week, starting from 2022-06-02?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {else}", "Answer": "628.57; 19.1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average sedentary_minutes and the average nightly_temperature of A4F_92332 within one week, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average sedentary_minutes and the average nightly_temperature of A4F_92332 within one week, starting from 2022-06-11?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "677.86; 34.13"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average sedentary_minutes and the average nightly_temperature of A4F_85240 within one week, starting from 2022-05-18?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average sedentary_minutes and the average nightly_temperature of A4F_85240 within one week, starting from 2022-05-18?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "530.14; 9.25"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average sedentary_minutes and the average nightly_temperature of A4F_69129 within one week, starting from 2022-05-17?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average sedentary_minutes and the average nightly_temperature of A4F_69129 within one week, starting from 2022-05-17?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {real number (two decimal)}", "Answer": "307.57; 19.22"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the average sedentary_minutes and the average nightly_temperature of A4F_10709 within one week, starting from 2022-05-25?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the average sedentary_minutes and the average nightly_temperature of A4F_10709 within one week, starting from 2022-05-25?\nOutput requirement: return 2 value(s); types (ordered): {real number (two decimal)}; {else}", "Answer": "70.14; 28.1"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the total steps and the average baseline_relative_sample_sum of A4F_79824 within one week, starting from 2022-06-13?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the total steps and the average baseline_relative_sample_sum of A4F_79824 within one week, starting from 2022-06-13?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "35780; 71.16"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the total steps and the average baseline_relative_sample_sum of A4F_73455 within one week, starting from 2022-05-26?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the total steps and the average baseline_relative_sample_sum of A4F_73455 within one week, starting from 2022-05-26?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "73877; -67.73"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the total steps and the average baseline_relative_sample_sum of A4F_77391 within one week, starting from 2022-05-24?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the total steps and the average baseline_relative_sample_sum of A4F_77391 within one week, starting from 2022-05-24?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "79100; -43.08"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the total steps and the average baseline_relative_sample_sum of A4F_27766 within one week, starting from 2022-06-09?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the total steps and the average baseline_relative_sample_sum of A4F_27766 within one week, starting from 2022-06-09?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "73980; 67.35"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat is the total steps and the average baseline_relative_sample_sum of A4F_13504 within one week, starting from 2022-05-27?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What is the total steps and the average baseline_relative_sample_sum of A4F_13504 within one week, starting from 2022-05-27?\nOutput requirement: return 2 value(s); types (ordered): {integer}; {real number (two decimal)}", "Answer": "33153; -55.57"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_94336's baseline_relative_nightly_standard_deviation values were higher on nights following days with more than average minutes of moderately_active_minutes within one week, starting from 2022-05-20?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_94336's baseline_relative_nightly_standard_deviation values were higher on nights following days with more than average minutes of moderately_active_minutes within one week, starting from 2022-05-20?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "32.87"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_31649's baseline_relative_nightly_standard_deviation values were higher on nights following days with more than average minutes of moderately_active_minutes within one week, starting from 2022-06-08?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_31649's baseline_relative_nightly_standard_deviation values were higher on nights following days with more than average minutes of moderately_active_minutes within one week, starting from 2022-06-08?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "67.31"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_10660's baseline_relative_nightly_standard_deviation values were higher on nights following days with more than average minutes of moderately_active_minutes within one week, starting from 2022-06-06?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_10660's baseline_relative_nightly_standard_deviation values were higher on nights following days with more than average minutes of moderately_active_minutes within one week, starting from 2022-06-06?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "85.71"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_33497's baseline_relative_nightly_standard_deviation values were higher on nights following days with more than average minutes of moderately_active_minutes within one week, starting from 2022-05-25?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_33497's baseline_relative_nightly_standard_deviation values were higher on nights following days with more than average minutes of moderately_active_minutes within one week, starting from 2022-05-25?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "26.63"}
{"Query_sql": "Given the following MySQL table schema, write ONE SELECT statement to compute two requested numeric values. Use DATE(ts), DATE(record_ts), DATE(start_time), DATE(night_end), or DATE(start_sleep) for date filtering if needed. Return exactly one row and two columns in order. Output SQL only.\n\nQuestion:\nWhat percentage of A4F_10141's baseline_relative_nightly_standard_deviation values were higher on nights following days with more than average minutes of moderately_active_minutes within one week, starting from 2022-06-11?\n\nSchema (DDL):\n```sql\nCREATE TABLE `pa_active_minutes` (\n  `id`                        VARCHAR(20) NOT NULL,\n  `ts`                        DATETIME    NOT NULL,\n  `fat_burn_minutes`          SMALLINT UNSIGNED,\n  `cardio_minutes`            SMALLINT UNSIGNED,\n  `peak_minutes`              SMALLINT UNSIGNED,\n  `sedentary_minutes`         SMALLINT UNSIGNED,\n  `lightly_active_minutes`    SMALLINT UNSIGNED,\n  `moderately_active_minutes` SMALLINT UNSIGNED,\n  `very_active_minutes`       SMALLINT UNSIGNED,\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_daily_summary` (\n  `id`                VARCHAR(20) NOT NULL,\n  `ts`                DATETIME    NOT NULL,\n  `resting_heart_rate` DECIMAL(5,2),\n  `calories_kcal`     DECIMAL(8,2),\n  `steps`             INT UNSIGNED,\n  `distance_m`        DECIMAL(10,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `pa_reports` (\n  `session_id`       BIGINT AUTO_INCREMENT PRIMARY KEY,\n  `id`               VARCHAR(20) NOT NULL,\n  `record_ts`        DATETIME    NOT NULL,\n  `activity_name`    VARCHAR(50),\n  `average_heart_rate` DECIMAL(5,2),\n  `duration`         INT UNSIGNED,\n  `active_duration`  INT UNSIGNED,\n  `calories`         DECIMAL(8,2),\n  `steps`            INT UNSIGNED,\n  INDEX `idx_pa_reports_id_ts` (`id`,`record_ts`)\n)\n-- Use DATE(record_ts) for day filtering; group by activity_name if needed.\n\nCREATE TABLE `additional_sleep` (\n  `sleep_id`         BIGINT      NOT NULL,\n  `id`               VARCHAR(20) NOT NULL,\n  `start_time`       DATETIME,\n  `end_time`         DATETIME,\n  `duration_min`     SMALLINT,\n  `minutes_asleep`   SMALLINT,\n  `minutes_awake`    SMALLINT,\n  `minutes_in_bed`   SMALLINT,\n  `main_sleep`       TINYINT(1),\n  `minutes_in_deep_sleep`  SMALLINT,\n  `minutes_in_light_sleep` SMALLINT,\n  `minutes_in_rem`   SMALLINT,\n  PRIMARY KEY (`sleep_id`),\n  INDEX (`id`)\n)\n-- Use DATE(start_time) for day filtering.\n\nCREATE TABLE `heart_rate_variability` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `rmssd`    DECIMAL(6,2),\n  `nrem_hr`  DECIMAL(6,2),\n  `entropy`  DECIMAL(6,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `oxygen_sat_daily` (\n  `id`       VARCHAR(20) NOT NULL,\n  `ts`       DATETIME    NOT NULL,\n  `sleep_average_oxygen_saturation` DECIMAL(5,2),\n  `lower_bound_oxygen_saturation`   DECIMAL(5,2),\n  `upper_bound_oxygen_saturation`   DECIMAL(5,2),\n  PRIMARY KEY (`id`,`ts`)\n)\n-- Use DATE(ts) for day filtering.\n\nCREATE TABLE `respiratory_rate` (\n  `id`                            VARCHAR(20)  NOT NULL,\n  `night_end`                     DATETIME     NOT NULL,\n  `full_sleep_breathing_rate`     DECIMAL(4,1),\n  `full_sleep_standard_deviation` DECIMAL(4,1),\n  `full_sleep_signal_to_noise`    DECIMAL(6,2),\n  `deep_sleep_breathing_rate`     DECIMAL(4,1),\n  `deep_sleep_standard_deviation` DECIMAL(4,1),\n  `deep_sleep_signal_to_noise`    DECIMAL(6,2),\n  `light_sleep_breathing_rate`    DECIMAL(4,1),\n  `light_sleep_standard_deviation`DECIMAL(4,1),\n  `light_sleep_signal_to_noise`   DECIMAL(6,2),\n  `rem_sleep_breathing_rate`      DECIMAL(4,1),\n  `rem_sleep_standard_deviation`  DECIMAL(4,1),\n  `rem_sleep_signal_to_noise`     DECIMAL(6,2),\n  PRIMARY KEY (`id`, `night_end`)\n)\n-- Use DATE(night_end) for day filtering.\n\nCREATE TABLE `skin_temp_sleep_nightly` (\n  `id`                                       VARCHAR(20)  NOT NULL,\n  `start_sleep`                               DATETIME     NOT NULL,\n  `end_sleep`                                 DATETIME     NOT NULL,\n  `temperature_samples`                       INT UNSIGNED,\n  `nightly_temperature`                       DECIMAL(5,2),\n  `baseline_relative_sample_sum`              DECIMAL(10,4),\n  `baseline_relative_sample_sum_of_squares`   DECIMAL(12,4),\n  `baseline_relative_nightly_standard_deviation` DECIMAL(6,4),\n  `baseline_relative_sample_standard_deviation`  DECIMAL(6,4),\n  PRIMARY KEY (`id`,`start_sleep`)\n)\n-- Use DATE(start_sleep) for day filtering.\n\n```", "Query_base": "You will be given the SQL result for the question in {data}. Please answer strictly with a semicolon-separated list of tokens.\nQuestion: What percentage of A4F_10141's baseline_relative_nightly_standard_deviation values were higher on nights following days with more than average minutes of moderately_active_minutes within one week, starting from 2022-06-11?\nOutput requirement: return 1 value(s); types (ordered): {real number (two decimal)}", "Answer": "44.01"}
